@{
    Layout = "~/Views/Shared/_SpotLayout.cshtml";
}
@section Styles{
    <style type="text/css">
        .content {
            border-radius: 20px;
            height: 100vh;
            width:100%;
        }

        .main-content {
            background-color: #0e0d0d;
            margin-right: 10px;
            padding: 15px;
            background-image: linear-gradient(#762676a8, #0e0d0d);
            overflow-y: auto;
        }

        .aside {
            display: flex;
            background-color: #262626;
            padding: 15px;
            overflow-y: auto;
            color: white;
        }

        .main-content-music {
            margin-top: 100px;
            display: flex;
            justify-content: center;
            align-items: center;
        }

        .music-content {
            padding-top: 12px;
            display: flex !important;
            justify-content: center;
            align-content: space-between;
            flex-direction: column;
        }

        .music-content-title {
            align-items: baseline !important;
        }

        .img-music-content,
        .img-aside {
            display: flex !important;
            justify-content: center;
            width: 100%;
            height: auto;
            max-width: 205px;
        }

        .img-aside {
            max-height: 388px;
            max-width: 388px;
        }

        .img-aside-content,
        .aside-content {
            display: flex !important;
            justify-content: center;
            flex-direction: column;
        }

        .music-content:hover {
            background-color: #8f2c8fa8; /* or any color you prefer */
        }

        .music-content:active {
            background-color: black;
        }
        #dvTable #tblDataTable th,tr ,td{
            color: white !important;
            background-color: black !important;
            border:none!important;
        }

        table.dataTable thead .sorting_asc{
           background-image:none!important;
        }
     
    </style>
}

<div class="d-flex container-fluid content">
    <div class="content main-content">
        <div>
            <h1 style="color:white">Hello World</h1>
            <p>
                John Doe John Doe John Doe John Doe John Doe John Doe John Doe
                John Doe John Doe John Doe John Doe John Doe John Doe
                John Doe John Doe John Doe John Doe John Doe John Doe John Doe
            </p>
            <div class="main-content-music row">

                <form id="albumForm">
                    <input type="text" id="txtAlbumName" placeholder="Album Name">
                    <input type="text" id="txtAlbumArtist" placeholder="Artist Name">
                    <input type="file" id="fileAlbumImage" placeholder="Image URL">
                    <img id="albumImagePreview" src="#" alt="Album Image Preview" style="display: none; width: 168px; height: 168px;" />
                    <button type="button" onclick="createAlbum()">Create Album</button>
                </form>
              
                <form id="songForm">
                    <input type="text" id="txtSongAlbumId" placeholder="Album ID">
                    <input type="text" id="txtSongArtist" placeholder="Artist Name">
                    <input type="text" id="txtSongName" placeholder="Song Name">
                    <input type="file" id="fileSongFile" placeholder="File URL">
                    <audio id="audiocontrolPreview" controls style="display: none;">

                        <source id="songAudioPreview" src="#" type="audio/mp3" />


                        Your brownser does not support this audio elemento
                    </audio>
                    <p id="duration"></p>
                    <input type="number" id="durationInput" placeholder="Duration input" hidden>
                    <input type="text" id="txtSongGenres" placeholder="Genres">
                    <input type="file" id="fileSongImage" placeholder="Song Image URL">
                    <img id="songImagePreview" src="#" alt="Song Image Preview" style="display: none; width: 168px; height: 168px; " />
                    <button type="button" onclick="createSong()">Create Song</button>
                    <button type="button" onclick="searchSong()">Search Song</button>



                    <div class="col-12" id="dvTable" style="display:none">
                        <table id="tblDataTable" class="table table-bordered" width="100%">
                            <thead>
                                <tr class=" ">
                                   
                                    <th>#</th>
                                    <th>Title</th>
                                    <th>Artist</th>
                                    <th>Album</th>
                                    <th>Duration</th>
                                    <th>Genres</th>
                                   

                                </tr>
                            </thead>
                            <tbody>
                            </tbody>
                        </table>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts{
    <script>
        var duration;
        var audioControl;
        var audioDurationElement;

        $(document).ready(function () {

            audioControl = $('#audiocontrolPreview')[0];
            audioDurationElement = $('#duration');

            $('#fileSongFile').change(function (e) {
                var file = e.target.files[0];
                var url = URL.createObjectURL(file);

                $(audioControl).on('loadedmetadata', function () {
                    duration = audioControl.duration;
                    var minutes = Math.floor(duration / 60);
                    var seconds = Math.floor(duration % 60);
                    // Ensure seconds are displayed with two digits
                    var formattedSeconds = seconds < 10 ? '0' + seconds : seconds;
                    audioDurationElement.text('Duration: ' + minutes + ':' + formattedSeconds);
                    $('#durationInput').val(parseInt(duration));
                    console.log(audioDurationElement.text());
                });
                $('#songAudioPreview').attr('src', url);
                audioControl.load(); // Reload audio player to apply the new source
                $('#audiocontrolPreview').show();
            });

            $('#fileAlbumImage').change(function () {
                showPreview(this, '#albumImagePreview', 'image');
            });

            $('#fileSongImage').change(function () {
                showPreview(this, '#songImagePreview', 'image');
            });
        });

        function showPreview(input, previewSelector, type) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();

                reader.onload = function (e) {
                    if (type === 'image') {
                        $(previewSelector).attr('src', e.target.result);
                        $(previewSelector).show();
                    }
                }

                reader.readAsDataURL(input.files[0]);
            }
        }

        function searchSong() {
            frmSearch = {
                SongName: $("#txtSongName").val(),
                ArtistName: $("#txtSongArtist").val(),
                SongGenres: $("#txtSongGenres").val()
            }
            $.ajax({
                type: 'POST',
                url: '@Url.Action("SearchSong1", "Spot")',
                data: frmSearch,
                dataType: "json",
                success: function (result) {
                    debugger
                    bindingTableSong(result.Data);
                    /* bindingTable(result.Data); */
                },
                error: function (request, status, error) {
                    console.log(error);
                }
            });
        }

        function createAlbum() {
            var formData = new FormData();
            formData.append("AlbumName", $("#txtAlbumName").val());
            formData.append("ArtistName", $("#txtAlbumArtist").val());
            formData.append("AlbumImage", $("#fileAlbumImage")[0].files[0]);

            $.ajax({
                url: '@Url.Action("CreateAlbum1", "Spot")',
                type: 'POST',
                contentType: false,
                processData: false,
                data: formData,
                success: function (result) {
                    alert('Album saved successfully');
                },
                error: function (error) {
                    console.error(error);
                }
            });
        }

        function createSong() {
            if (!duration) {
                alert("Please wait until the audio duration is loaded.");
                return;
            }

            var formData = new FormData();
            formData.append("AlbumId", $("#txtSongAlbumId").val());
            formData.append("ArtistName", $("#txtSongArtist").val());
            formData.append("SongName", $("#txtSongName").val());
            formData.append("SongFile", $("#fileSongFile")[0].files[0]);
            formData.append("SongGenres", $("#txtSongGenres").val());
            formData.append("SongImage", $("#fileSongImage")[0].files[0]);
            formData.append("SongLength", $('#durationInput').val());

            console.log(duration);

            $.ajax({
                url: '@Url.Action("CreateSong1", "Spot")',
                contentType: false,
                type: 'POST',
                processData: false,
                data: formData,
                success: function (result) {
                    alert('Song saved successfully');
                },
                error: function (error) {
                    console.error(error);
                }
            });
        }

        function bindingTableSong(songData) {

            $('#dvTable').show();
            // Initialize DataTable
            dataTable = $('#tblDataTable').DataTable({

                destroy: true, //ล้างข้อมูลก่อนหน้า
                data: songData,
                searching: false,
                lengthchange: false,
                scrollx: false,
                info: false,

                columns: [



                    {
                        data: null, className: 'text-center', orderable: false,sortable:false,

                        render: function (data, type, row, meta) {


                            return (meta.row + 1)
                        }
                    },
                    {
                        data: null, className: 'text-left', orderable: false,
                        render: function (data, type, row) {

                            return data.SongName;

                        }

                    },
                    {
                        data: null, className: 'text-left', orderable: false,

                        render: function (data, type, row) {

                            return data.ArtistName;

                        }

                    },
                    {
                        data: null, className: 'text-left', orderable: false,

                        render: function (data, type, row) {

                            return data.AlbumId


                        }


                    },

                    
                {
                    data: null, className: 'text-center', orderable: false,

                    render: function (data, type, row) {
                        debugger
                        var duration = data.SongLength
                        var minutes = Math.floor(duration / 60);
                        var seconds = Math.floor(duration % 60);
                      
                        // Ensure seconds are displayed with two digits
                        var formattedSeconds = seconds < 10 ? '0' + seconds : seconds;
                        audioDurationElement.text('Duration: ' + minutes + ':' + formattedSeconds);
                        return duration != null ? minutes + ':' + formattedSeconds : "";

                    }

                },
                {
                    data: null, className: 'text-center', orderable: false,

                    render: function (data, type, row) {

                        return data.SongGenres;

                    }

                }
             ]
           
               
            });
            //rowCount = dataTable.rows().count();
        }
    </script>
}
