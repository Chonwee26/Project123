@model Project123.Dto.AlbumModel;

@{
    Layout = "~/Views/Shared/_SpotLayout.cshtml";
    ViewBag.Title = Model.AlbumName;
}



@section Styles{
    <style type="text/css">
        .content {
            border-radius: 20px;
            height: calc(100vh - 75px); /* Adjust height to account for the bottom bar */
            overflow: hidden;
        }

        .main-content {
            background-color: #0e0d0d;
            margin-right: 10px;
            height: 100%;
            padding: 15px;
            background-image: linear-gradient(#762676a8, #0e0d0d);
            overflow-y: auto;
        }

        .aside {
            display: flex;
            background-color: #262626;
            padding: 15px;
            overflow-y: auto;
            height: 100%;
            color: white;
        }

        .main-content-music {
            margin-top: 100px;
            display: flex;
            /*    justify-content: center;*/
            align-items: center;
        }

        .music-content {
            padding-top: 12px;
            display: flex !important;
            justify-content: center;
            align-items: center;
            flex-direction: column;
        }

        .music-content-title {
            margin-top: 10px;
        }

        .img-music-content,
        .img-aside {
            display: flex !important;
            justify-content: center;
            width: 100%;
            height: auto;
            max-width: 205px;
        }

        .img-aside {
            max-height: 388px;
            max-width: 388px;
        }

        .img-aside-content,
        .aside-content {
            display: flex !important;
            justify-content: center;
            flex-direction: column;
        }

        .dv-content {
            max-height: 320px;
            max-width: 220px;
            border-radius: 8px;
        }

            .dv-content:hover {
                background-color: #8f2c8fa8; /* or any color you prefer */
            }

            .dv-content:active {
                background-color: black;
            }
        .dv-title {
            display: flex;
            flex-direction: column;
            justify-content: flex-end;
            padding-bottom: 70px;
        }
        .dv-album-img {
            margin: 100px 10px 20px 20px;
        }

        #dvTableAlbum #tblDataTableSong th, tr, td {
            color: white !important;
            background-color: black !important;
            border: none !important;
        }

        table.dataTable thead .sorting_asc {
            background-image: none !important;
        }

        .btn-edit-album, .btn-delete, btn-edit-song {
            cursor: pointer;
        }
        
    </style>
}

<div class="d-flex container-fluid content">
    <div class="content main-content col-lg-9 col-7">
        <div>
            <div class="album-details d-flex">
                <div class="dv-album-img">
                    <img src="@Model.AlbumImagePath" alt="@Model.AlbumName" class="img-music-content" />
                </div>

                <div class="dv-title">


                    <h1>@Model.AlbumName</h1>
                    <p>Artist: @Model.ArtistName</p>
                </div>
            </div>

            @*<div class="col-xxl-2 col-lg-4 col-6 dv-content" data-album-id="${album.AlbumId}">
                <div class="music-content">
                    <img id="music_pic${count}" src="@Model.AlbumImagePath" class="img-music-content" alt="@Model.AlbumName"  />
                </div>
                <div class="music-content-title">
                    <h6 class="link-opacity-100-hover" href="#">@Model.AlbumName</h6>
                    <p class="link-opacity-100-hover" href="#">@Model.ArtistName</p>
                </div>
            </div>*@
            <div class="main-content-music row">

                @*  <div class="col-xxl-2 col-lg-4 col-6 dv-content">
                    <div class=" music-content">
                        <img id="music_pic1" src="~/picture/Spotify Image/music_pic6_yorushika.jpg" class="img-music-content" />
                    </div>
                    <div class="music-content-title">
                        <h6>Spice and Wolf</h6>
                        <p>Kevin Penkin</p>
                    </div>

                </div>*@



            </div>
        </div>
        <div class="col-12" id="dvTableAlbum" style="display:block">
            <table id="tblDataTableSong" class="table table-bordered" width="100%">
                <thead>
                    <tr class="">
                       
                        <th style="width:40px !important">#</th>
                        <th>Title</th>
                        <th style="width:20px !important"><i class="fa-regular fa-clock"></i></th>
                     
                    </tr>
                </thead>
                <tbody>
                </tbody>
            </table>
        </div>
    </div>
    <div class=" content aside col-lg-3 col-5" id="aside">
        <div>
            <aside class="aside-content px-3">
                <button class="btn" id="btnCloseAside" style="color:white">Close</button>
                <p>”Spice and Wolf: MERCHANT MEETS THE WISE WOLF” Original Soundtrack (Vol.2)</p>
                <div class="img-aside-content">
                    <img id="aside_pic" src="~/picture/Spotify Image/music_pic5.jpg" class="img-aside" />
                </div>
                <h3>17さいのうた。</h3>
                <h6>Yuika</h6>

                <div class="aside-about-artist">
                    <div class="aside-about-artist-img">
                        <h6>About the artist</h6>
                    </div>
                    <div class="aside-about-artist-title">
                        <h6>Yuika</h6>
                        <p>19歳女性シンガーソングライター。 2021年にTikTokに投稿した「好きだから。」がティーンから絶大な共感を生み、...</p>
                    </div>
                </div>
            </aside>
        </div>
    </div>
</div>

@section Scripts{
    <script type="text/javascript">
        var AlbumId = @Model.AlbumId;
        @*var ArtistName = @Model.ArtistName;*@
        $(document).ready(function () {
         /*   getAlbum();*/
            //getAlbumContainer();

            searchSongs();

            $('.img-music-content').on('click', function () {

                var imgSrc = $(this).attr('src');
                $('#aside_pic').attr('src', imgSrc);
                if ($('#aside').css('display') == 'none') {
                    toggleAsideDisplay();
                }
            });
            $(document).on('click', '.dv-content', function () {
                ;
                var imgSrc = $(this).find('img').attr('src'); // Changed to find the image inside .dv-content
                $('#aside_pic').attr('src', imgSrc);
                if ($('#aside').css('display') == 'none') {
                    toggleAsideDisplay();
                }
                console.log(count);
            });

            $('#btnCloseAside').click(function () {
                toggleAsideDisplay();
            });
        });

        $('#tblDataTableSong tbody').on('click', 'tr', function () {
            var rowDataAlbum = $('#tblDataTableSong').DataTable().row(this).data();
            if (rowDataAlbum) {
                $('#songAudio').attr('src', rowDataAlbum.SongFilePath);
                // Load the new audio source
                audioControl.load();
                $('#audiocontrol').show();
                audioControl.play();
                // Play the audio (optional)
                // audioControl.play();
            } else {
                console.error('Row data is null or undefined');
            }
        });

        async function searchSongs() {
            debugger
            let frmSearch = {

                AlbumId: AlbumId
            };

            await $.ajax({
                type: 'POST',
                url: '@Url.Action("SearchSong1", "Spot")',
                data: frmSearch,
                dataType: "json",
                success: function (result) {
                    bindingTableSong(result.Data);
                    //$('#albumEditImagePreview').attr('src', BtnAlbumData.AlbumImagePath)
                    if (result.status == "S") {

                    }
                    else {

                    }
                },
                error: function (request, status, error) {
                    console.log(error);
                }
            });
        }
      

        function toggleAsideDisplay() {
            $('#aside').toggle();
            $('.main-content').toggleClass('col-lg-9 col-7 col-lg-12 col-12');
        }




        function bindingTableSong(songData) {
            $('#dvTableAlbum').show();
            // Initialize DataTable
            dataTable = $('#tblDataTableSong').DataTable({
                destroy: true, //ล้างข้อมูลก่อนหน้า
                data: songData,
                searching: false,
                lengthchange: false,
                scrollx: false,
                paging: false,
                info: false,
                columns: [

                    {
                        data: null, className: 'text-center',width:'40px!important', orderable: false, sortable: false,
                        render: function (data, type, row, meta) {
                            return (meta.row + 1)
                        }
                    },
                    {
                        data: null, className: 'text-left',  orderable: false,
                        render: function (data, type, row) {

                            var html = `<div>${data.SongName}</div><div>${data.ArtistName}</div>`
                            return html
                        }
                    },


                    {
                        data: null, className: 'text-center',width: '60px', orderable: false,
                        render: function (data, type, row) {
                            var duration = data.SongLength
                            var minutes = Math.floor(duration / 60);
                            var seconds = Math.floor(duration % 60);
                            // Ensure seconds are displayed with two digits
                            var formattedSeconds = seconds < 10 ? '0' + seconds : seconds;
                          /*  audioDurationElement.text('Duration: ' + minutes + ':' + formattedSeconds);*/
                            return duration != null ? minutes + ':' + formattedSeconds : "";
                        }
                    },
                ]
            });
            //rowCount = dataTable.rows().count();
        }



        //$('#aside').on('change', function () {


        //    if ($('#aside').css('display') == 'none') {
        //        debugger
        //        $('.main-content').removeClass('col-lg-9 col-7').addClass('col-lg-12 col-12');
        //    }
        //    else {
        //        $('.main-content').removeClass('col-lg-12 col-12').addClass('col-lg-9 col-7');
        //    }
        //});

    </script>
}
