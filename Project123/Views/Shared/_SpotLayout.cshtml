<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Project123</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link href="~/lib/datetimepicker/css/jquery.datetimepicker.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/Project123.styles.css" asp-append-version="true" />
    <link href="~/lib/dataTables/css/jquery.dataTables.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css" integrity="sha512-z3gLpd7yknf1YoNbCzqRKc4qyor8gaKU1qmn+CShxbuBusANI9QpRohGBreCFkKxLhei6S9CQXFEbbKuqLg0DA==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />
    <link href="https://cdn.jsdelivr.net/npm/sweetalert2@11.10.0/dist/sweetalert2.min.css" rel="stylesheet" />
    <link href='https://fonts.googleapis.com/css?family=Noto Sans Thai' rel='stylesheet'>

    <link href="~/lib/font-awesome/css/font-awesome.min.css" rel="stylesheet" />
    @await RenderSectionAsync("Styles", required: false)
    <style>

        .btn-favorite {
            cursor: pointer;
            display: block;
        }

        #tblDataTableSong:hover .btn-favorite {
            display: block;
        }

        table.dataTable thead th, table.dataTable thead td {
            border-bottom: unset;
        }

        tbody, td, tfoot, th, thead, tr {
            border-style: unset;
        }

        .content {
            border-radius: 20px;
            height: calc(100vh - 90px); /* Adjust height to account for the bottom bar */
            overflow: hidden;
        }

        .about-artist {
            background: #393838;
            padding: 10px;
            border-radius: 15px;
        }

        .main-content {
            background-color: #0e0d0d;
            /*margin-right: 10px;*/
            height: 100%;
            background-image: linear-gradient(#762676a8, #0e0d0d);
            scrollbar-color: black gray;
            overflow-y: hidden; /* For browsers that support it, this avoids pushing the content */
            /* Adds padding to reserve space for the scrollbar */
            /*margin-right: 15px;*/
            margin-right: 5px;
            scrollbar-gutter: stable;
            scrollbar-width: thin;
            padding-left: 20px;
        }

            .main-content:hover {
                overflow-y: auto;
                /*padding: 15px 0px 15px 15px !important;*/
            }
        /* Adjust width on hover to keep space for scrollbar */

        .aside {
            display: flex;
            background-color: #262626;
            padding: 15px;
            overflow-y: hidden;
            height: 100%;
            color: white;
            padding-right: 15px;
            scrollbar-color: black gray;
            scrollbar-gutter: stable;
            scrollbar-width: thin;
        }

            .aside:hover {
                overflow-y: auto;
            }

        .main-content-music {
            margin-top: 20px;
            display: flex;
            /*    justify-content: center;*/
            align-items: center;
        }

        .music-content {
            padding-top: 12px;
            display: flex !important;
            justify-content: center;
            align-items: center;
            flex-direction: column;
        }

        .music-content-title {
            margin-top: 10px;
            display: inline-grid;
        }

        .text-content {
            text-overflow: ellipsis;
            white-space: nowrap;
            overflow: hidden;
        }

        .img-music-content,
        .img-aside {
            display: flex !important;
            justify-content: center;
            width: 169px;
            height: 169px;
            max-width: 169px;
        }

        .img-aside {
            display: flex !important;
            justify-content: center;
            /*   width: 275px;
            height: 275px; */
            width: 100%;
            height: 100%;
            max-height: auto;
            /*max-width: 268px;*/
            max-width: 410px;
        }

        .img-aside-content,
        .aside-content {
            display: flex !important;
            justify-content: center;
            flex-direction: column;
        }

        .dv-content {
            max-height: 320px;
            max-width: 197px;
            border-radius: 8px;
        }

            .dv-content:hover {
                background-color: #8f2c8fa8;
            }

            .dv-content:active {
                background-color: black;
            }

        #miniPlayer {
            width: 400px;
            font: 14px "Open Sans", sans-serif;
        }

        #credits {
            padding: 0 0 10px 0;
            font: italic 10px "Open Sans", sans-serif;
        }

        #in-pip-message {
            display: none;
        }

        @@media (display-mode: picture-in-picture) and (prefers-color-scheme: light) {
            body {
                background: antiquewhite;
            }
        }

        @@media (display-mode: picture-in-picture) and (prefers-color-scheme: dark) {
            body {
                background: #333;
            }

            a {
                color: antiquewhite;
            }
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        html, body {
            height: 100%;
            margin: 0;
            /*overflow: hidden;*/
        }

        body {
            background-color: black;
            min-width: 874px;
        }

        @@media (max-width: 874px) {
            .main-content {
                overflow-x: auto;
            }
        }

        #main {
            color: white;
            margin-left: 100px;
            padding: 10px 0px;
        }

        .sidebar {
            position: absolute;
            left: 0;
            height: calc(100vh - 90px);
            display: flex !important;
            flex-direction: column;
            z-index: 1;
            border: 4px solid;
            min-width: 90px !important; /* Minimum width to match your input range */
            max-width: 420px; /* Maximum width to match your input range */
            overflow-y: hidden;
            overflow-x: hidden;
            scrollbar-color: black gray;
            padding: 10px;
            box-sizing: border-box;
            scrollbar-gutter: stable;
            scrollbar-width: thin;
        }

            .sidebar:hover {
                overflow-y: auto;
            }

        .search-sidebar {
            display: flex !important;
            justify-content: center;
            align-items: center;
            flex-direction: column;
            background-color: #262626;
            margin-bottom: 20px;
            border-radius: 5px;
        }

        .lib-sidebar {
            background-color: #262626;
            padding-top: 12px;
            border-radius: 5px;
        }

        #bottomBar {
            position: fixed;
            background-color: #000;
            bottom: 0;
            height: 75px;
            max-height: 75px !important;
            width: 100vw;
            border: 4px solid;
            z-index: 3; /* Ensure bottomBar is above sideBar */
        }

        .bottomside-title {
            /*  padding-top:15px;*/
            padding-top: 9px;
        }

        img {
            /* border: 1px solid #ddd;*/
            border-radius: 4px;
            width: 50px;
            height: 50px;
        }

        .circle, .circle a img {
            border-radius: 50%;
        }

        .imgArtist {
            display: flex !important;
            justify-content: center;
            align-items: center;
            width: 64px;
            height: 64px;
        }

        .img-aside-about {
            height: 80px;
            width: 80px;
            border-radius: 50%;
            /*  width:100%;
            height:100%;*/
        }

        .iconlove {
        }

        .button-control {
            display: flex !important;
            justify-content: center;
            align-items: center;
            width: 32px;
            height: 32px;
            background-color: black;
            border: none;
        }

        button .button-control button:focus {
            outline: none;
        }

        .icon-control {
            color: #bdbdbd;
            font-size: 24px;
            transition: transform 0.2s, color 0.2s;
        }

        .button-control:hover .icon-control {
            transform: scale(1.1);
            color: #ffffff;
        }

        .button-control:active .icon-control {
            color: #e52cf9;
        }

        .imgMainArtist {
            display: flex !important;
            justify-content: center;
            align-items: center;
        }

        .img-bottomside {
            width: 56px;
            height: 56px;
        }

        .dv-bottomside-image {
            margin: 3px;
        }

        .white-text {
            color: white !important;
        }

        .gray-text {
            color: #bfbfbf !important;
        }

        .active-icon {
            color: white !important;
        }

        .inactive-icon {
            color: #bfbfbf !important;
        }

        /* New hover styles */
        #sidebarHome a:hover,
        #sidebarSearch a:hover,
        #sidebarAdmin a:hover,
        .iconlove:hover,
        .imgArtist:hover {
            background-color: gray; /* or any color you prefer */
        }

        .btn-media {
            cursor: pointer;
            font-size: 40px;
        }

        .btn-media-play {
        }

        .hide-element {
            display: none !important;
        }

        .progress {
            height: 10px;
            margin-top: 10px;
            width: 83%;
            background-color: unset;
        }

        .progress-bar {
            /*background-color: #007bff;*/ /* Blue color for the progress bar */
            width: 100%; /* Initial width is 0%, will be adjusted via JavaScript */
            /*     cursor: pointer;*/
            /*   -webkit-appearance:progress-bar;
            appearance:progress-bar;*/
        }

        .icon-color-purple {
            color: #e52cf9 !important;
        }

        .title-artist {
            cursor: pointer;
            color: unset;
            text-decoration: none;
            opacity: 0.8;
        }

            .title-artist:hover {
                color: unset;
                text-decoration: underline;
            }

        #btnVolumeBar {
            /* background: linear-gradient(to right, #82CFD0 0%, #82CFD0 50%, #fff 50%, #fff 100%);*/
            margin-top: 11px;
            height: 10px;
            border-radius: 4px;
        }

        input[type='range'] {
            overflow: hidden;
            -webkit-appearance: none;
            background-color: #5c5c5b;
        }

            input[type='range']::-webkit-slider-runnable-track {
                height: 10px;
                /*         width:100%;*/
                -webkit-appearance: none;
                color: #e52cf9;
                margin-top: -1px;
            }

            input[type='range']::-webkit-slider-thumb {
                width: 11px;
                -webkit-appearance: none;
                height: 100%;
                cursor: pointer;
                background: white;
                border-radius: 50%;
                box-shadow: -1000px 0 0 1000px #9800a9;
            }

            input [type="range"]::-moz-range-progress {
                background-color: #e52cf9;
            }

            input[type="range"]::-moz-range-track {
                background-color: #e52cf9;
            }
            /* IE*/
            input[type="range"]::-ms-fill-lower {
                background-color: #e52cf9;
            }

            input[type="range"]::-ms-fill-upper {
                background-color: #e52cf9;
            }
        /*.progress-bar::-webkit-slider-thumb {
                -webkit-appearance: none;

                width: 0;*/ /* Set width to 0 */
        /*height: 0;*/ /* Set height to 0 */
        /*}*/
        /* slider thumb */
        /*.progress-bar::-webkit-slider-thumb {
                -webkit-appearance: none;*/ /* Override default look */
        /*appearance: none;
                display :none;
                margin-top: -4px;*/ /* Centers thumb on the track */
        /*background-color: #808080;
                border-radius: 0.5rem;
                height: 1rem;
                width: 1rem;
            }*/
        #profileDropdown {
            top: 13px !important;
            left: 82px !important;
            z-index: 1000;
            background-color: #262626;
            color: #fff;
            /*border: 1px solid #ddd;*/
            border-radius: 5px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            padding: 10px;
            display: none;
            max-height: 200px; /* Set a max-height for the dropdown */
            overflow-y: auto; /* Allow vertical scrolling */
        }

        .dropdown-item {
            color: white;
        }

            .dropdown-item:focus,
            .dropdown-item:active {
                background-color: transparent !important;
                color: inherit !important; /* Preserve original text color */
                outline: none; /* Remove focus outline if needed */
            }
    </style>
</head>
<body>
    <header>
        <div class="container-fluid">

            <!-- Dropdown -->
            <div class="dropdown-menu" id="profileDropdown" style="display: none; position: absolute;">
                <a class="dropdown-item" href="/Spot/SpotProfilePage">Profile</a>
                <a class="dropdown-item" id="logoutBtn" onclick="logOut()" href="#">Log Out</a>
            </div>

            <nav class="sidebar">
                <div class="search-sidebar" id="">

                    <!--<div class="profile imgArtist circle"  data-album-id="0" data-bs-toggle="tooltip" data-bs-html="true" data-bs-placement="right" title="" data-bs-original-title="
                    LiSA"<br>
                               <span>Artist</span>
                           ">-->
                    @* <a href="/Spot/ArtistDetails?artistname=LiSA">*@
                    <!--<img style="border-radius:50%;" id="profileImage" src="/uploads/LiSA/LiSA/lalisa.jpg">-->
                    @*</a>*@
                    <!--</div>-->

                    <div class="profile imgArtist circle" data-album-id="0" data-bs-toggle="tooltip" data-bs-html="true" data-bs-placement="right" title="">

                        <img style="border-radius:50%;" id="profileImage" src="/picture/blank-profile-picture-973460_640.png" alt="profile image">
                    </div>



                    <div id="sidebarHome">
                        @*   <a href="/home/MusicSpotpage" class="btn active-icon nav-link" id="btnHome"><i class="fa-solid fa-house" id="iconHome"></i></a>*@
                        <a href="/home/MusicSpotpage" class="btn  nav-link" id="btnHome"><i class="fa-solid fa-house gray-text" id="iconHome"></i></a>
                    </div>

                    <div id="sidebarSearch">
                        <a href="/Spot/Search" class="btn nav-link" id="btnSearch" data-page="search"><i class="fa-solid fa-magnifying-glass gray-text" id="iconSearch"></i></a>
                        @*<a href="/Spot/SpotAdminPage" class="btn" id="btnSearch"><i class="fa-solid fa-magnifying-glass" id="iconSearch" style="color: #bfbfbf"></i></a>*@

                    </div>

                    <div id="sidebarAdmin">
                        @*<a href="/Spot/Search" class="btn" id="btnSearch"><i class="fa-solid fa-magnifying-glass" id="iconSearch" style="color: #bfbfbf"></i></a>*@
                        <a href="/Spot/SpotAdminPage" class="btn nav-link" id="btnAdmin"><i class="fa-solid fa-user gray-text" id="iconAdmin"></i></a>

                    </div>

                </div>

                <div class="lib-sidebar" id="libSideBar">
                    <div class="" style="text-align:center;">

                        <a href="/Spot/FavoriteSong" class="btn iconlove nav-link" id="btnLove"><i class="fa-regular fa-heart gray-text" id="iconLove"></i></a>

                    </div>
                    <div class="" id="contentLibSideBar">

                    </div>
                    @*<div class="imgArtist">
                            <img src="~/picture/shipment_pic3.jpg" />
                        </div>*@

                </div>
            </nav>
        </div>
    </header>
    @*<div class="container">
        <main role="main" class="pb-3">*@
    <div id="main">
        <partial name="~/Views/Spot/_SpotPreLoader.cshtml" />
        @RenderBody()
        <!--<div class="container-fluid content aside col-lg-3 col-6" id="aside">-->
        @*<div class="dv-aside">
                <aside class="aside-content px-3">
                    <button class="btn" id="btnCloseAside" style="color:white">Close</button>
                    <p>”Spice and Wolf: MERCHANT MEETS THE WISE WOLF” Original Soundtrack (Vol.2)</p>
                    <div class="img-aside-content">
                        <img id="aside_pic" src="~/picture/Spotify Image/music_pic5.jpg" class="img-aside" />
                    </div>
                    <h3>17さいのうた。</h3>
                    <h6>Yuika</h6>

                    <div class="aside-about-artist">
                        <div class="aside-about-artist-img">
                            <h6>About the artist</h6>
                        </div>
                        <div class="aside-about-artist-title">
                            <h6>Yuika</h6>
                            <p>19歳女性シンガーソングライター。 2021年にTikTokに投稿した「好きだから。」がティーンから絶大な共感を生み、...</p>
                        </div>
                    </div>
                </aside>
            </div>*@
        <!--</div>-->
    </div>
    @*</main>
        </div>*@

    <footer class="border-top footer">
        <div class="bottombar" id="bottomBar">
            <div class="col-12">
                <div class="row">
                    <div class="d-flex col-4" id="dv-bottomside">
                        @*<div class="dv-bottomside-image" style="margin:5px 15px 0px 15px">

                                <img class="img-bottomside" src="~/picture/Japan-2107x1406.jpg" />
                            </div>
                            <div class="bottomside-title">
                                <h6 style="color:white;margin:0" class="">Trying to stay alive</h6>
                                <p style="color:gray;">xenophuria</p>
                            </div>*@
                    </div>
                    <div class="content bottomside-control col-4" id="musicPlayer" style="padding:0;">
                        <div class="col-12 d-flex justify-content-center">

                            <div id="waveFormAudio">
                                <audio class="col-12" id="audiocontrol" controls="" style="height:38px;display:none">

                                    <source id="songAudio" src="blobdosomething" type="audio/mp3">
                                    Your brownser does not support this audio elemento

                                </audio>

                            </div>

                            <button class="button-control btn-media btn-media-shuffle" type="button">

                                <i class="fa-solid icon-control fa-shuffle" id="iconMediaShuffle"></i>

                            </button>

                            <button class="button-control btn-media btn-media-backward">

                                <i class="fa-solid icon-control fa-backward" id="iconMediaBackward"></i>

                            </button>

                            <button class="button-control btn-media btn-media-play">

                                <i class="fa-solid icon-control fa-circle-play" id="iconMediaPlay"></i>

                            </button>

                            <button class="button-control btn-media btn-media-pause">

                                <i class="fa-solid icon-control fa-circle-pause" id="iconMediaPause"></i>

                            </button>

                            <button class="button-control btn-media btn-media-forward">

                                <i class="fa-solid icon-control fa-forward" id="iconMediaForward"></i>

                            </button>

                            <button class="button-control btn-media btn-media-repeat">

                                <i class="fa-solid icon-control fa-repeat" id="iconMediaRepeat"></i>

                            </button>

                        </div>

                        <div class="botdv-media d-flex">
                            <span class="media-time" id="startMediaTime" style="color:white;padding:0 12px 0 0; margin-top:3px; font-size:14px">0:00</span>
                            <div class="progress">

                                <input type="range" id="progressBar" class="progress-bar" min="0" max="100" value="0">

                            </div>

                            <span class="media-time" id="endMediaTime" style="color: white; padding-left: 12px; margin-top: 3px; font-size: 14px ">0:00</span>

                        </div>
                    </div>

                    <div class="content bottomside-control col-4 ">
                        <div class="col-12 d-flex justify-content-center">

                            @*<button class="button-control"><i class="btn-media-play fa-solid icon-control fa-play"></i></button>
                                <button class="button-control"><i class="btn-media-pause fa-solid icon-control fa-pause"></i></button>*@

                            <button class="button-control"><i class="btn-media-volume fa-solid icon-control fa-volume-low"></i></button>
                            <input type="range" class="btn-media-volume-bar" id="btnVolumeBar" min="0" max="1" step="0.01" value="">

                            <button class="button-control"><i class="btn-media-fullscreen icon-control fa-solid fa-up-right-and-down-left-from-center" style="font-size:16px"></i></button>
                            <button class="button-control"><i class="btn-media-miniPlayer icon-control fa-solid fa-arrow-up-right-from-square" style="font-size:16px"></i></button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </footer>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.10.0/dist/sweetalert2.all.min.js"></script>
    <script src="~/lib/datetimepicker/js/jquery.datetimepicker.full.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js"></script>
    <script src="https://cdn.datatables.net/1.13.7/js/jquery.dataTables.min.js"></script>
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.min.js"></script>
    <partial name="_ValidationScriptsPartial" />
    @*script wavesufer*@
    <script src="https://unpkg.com/wavesurfer.js@7"></script>
    <script src="https://unpkg.com/wavesurfer.js@7/dist/plugins/regions.min.js"></script>

    <script>

        jQuery(document).ajaxStart(function () {

            jQuery('div.dv-animation').show();
        });

        jQuery(document).ajaxStop(function () {
            // jQuery('div.theme-loader').fadeOut('slow');
            jQuery('div.dv-animation').fadeOut('slow');
        });

        var audioControl = $('#audiocontrol')[0];
        var audioIndex = 0;
        var audioVolume = $('#btnVolumeBar');
        var volume;
        var progressBar = $('#progressBar');

        $(document).ready(function () {


            // Set the title attribute dynamically


            // Dispose of any old tooltip instance and reinitialize

            getProfileImage()
            $(audioVolume).val(localStorage.getItem("playerVolume"));
            console.log(localStorage.getItem("playerVolume"));
            $(".profile").on("click", function (e) {

                e.stopPropagation();
                const $dropdown = $("#profileDropdown");

                // Position the dropdown near the clicked element
                const offset = $(this).offset();
                $dropdown.css({
                    top: offset.top + $(this).outerHeight(),
                    left: offset.left,
                });

                // Toggle the dropdown visibility
                $dropdown.toggle();

                //if ($dropdown.is(":visible")) {
                //    $(".sidebar, .main-content").css("overflow", "hidden");  // Disable scrolling on html and body
                //}
                //else {
                //    $(".sidebar, .main-content").css("overflow", "auto");
                //}

                // Close the dropdown when clicking outside
                $(document).on("click", function () {
                    $dropdown.hide();
                    //$(".sidebar, .main-content").css("overflow", "auto");
                });
            });

            // Prevent closing the dropdown when clicking inside it
            $("#profileDropdown").on("click", function (e) {
                e.stopPropagation();
            });

            document.addEventListener('keypress', function (event) {

                setTimeout(
                    function () {

                        if (event.code === 'Space') {

                            event.preventDefault();
                            if (audioControl.paused) {
                                audioControl.play();
                                $('.btn-media-play').click()
                            } else {
                                audioControl.pause();
                                $('.btn-media-pause').click()
                            }
                        }
                    }, 300);
            });
            let isFullscreen = false; // Track fullscreen state
            let isProcessing = false; // Prevent multiple rapid clicks

            $('.btn-media-fullscreen').click(function () {
                if (isProcessing) return; // Ignore click if processing

                isProcessing = true; // Set flag to prevent additional clicks

                // Toggle fullscreen state
                if (!isFullscreen) {
                    // Enter fullscreen
                    let element = document.documentElement; // Use the whole document

                    if (element.requestFullscreen) {
                        element.requestFullscreen();
                    } else if (element.mozRequestFullScreen) { // Firefox
                        element.mozRequestFullScreen();
                    } else if (element.webkitRequestFullscreen) { // Chrome, Safari, Opera
                        element.webkitRequestFullscreen();
                    } else if (element.msRequestFullscreen) { // IE/Edge
                        element.msRequestFullscreen();
                    }
                } else { // Exit fullscreen

                    if (document.exitFullscreen) {
                        document.exitFullscreen();
                    } else if (document.mozCancelFullScreen) { // Firefox
                        document.mozCancelFullScreen();
                    } else if (document.webkitExitFullscreen) { // Chrome, Safari, Opera
                        document.webkitExitFullscreen();
                    } else if (document.msExitFullscreen) { // IE/Edge
                        document.msExitFullscreen();
                    }
                }
            });

            // Listen for fullscreen change event
            $(document).on('fullscreenchange webkitfullscreenchange mozfullscreenchange MSFullscreenChange', function () {
                isFullscreen = !!(document.fullscreenElement ||
                    document.mozFullScreenElement ||
                    document.webkitFullscreenElement ||
                    document.msFullscreenElement);

                isProcessing = false; // Reset flag after state change
            });

            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
            var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl)
            })
            toggleAsideDisplay();
            progressBar.attr('disabled', true);
            $('.btn-media-pause').addClass('hide-element')

            audioControl.volume = audioVolume.val();

            $(audioVolume).on('input', function () {

                audioControl.volume = $(this).val();

                localStorage.setItem("playerVolume", audioControl.volume);
                console.log(localStorage.getItem("playerVolume"));

            })
            $('.btn-media-play').click(function () {

                if ($('#songAudio').attr('src') != 'blobdosomething') {
                audioControl.play(audioControl);
                    $('.btn-media-play').addClass('hide-element');
                    $('.btn-album-play').addClass('hide-element');
                    $('.btn-media-pause').removeClass('hide-element');
                    $('.btn-album-pause').removeClass('hide-element');
                }
            });
            $('.btn-media-pause').click(function () {
                audioControl.pause(audioControl);

                $('.btn-media-play').removeClass('hide-element');
                $('.btn-album-play').removeClass('hide-element');
                $('.btn-media-pause').addClass('hide-element');
                $('.btn-album-pause').addClass('hide-element');
            });

            $('.btn-media-repeat').click(function () {

                $('#iconMediaRepeat').toggleClass('icon-color-purple');

                if (audioControl.loop) {
                    audioControl.loop = false;
                } else {
                    audioControl.loop = true;
                    audioControl.play();
                }
            });

            //audioControl.addEventListener('timeupdate', function () {
            //

            //        var currenttime = audioControl.currentTime / audioControl.duration * 100;
            //        progressBar.attr('aria-valuenow', currenttime);

            //        progressBar.css('width', currenttime + '%');

            //});

            //$('.progress').click(function (e) {

            //});

            //audioControl.addEventListener('timeupdate', function () {
            //

            //    var currenttime = audioControl.currentTime / audioControl.duration * 100;
            //    progressBar.attr('data-time',currenttime);

            //    //progressBar.css('width', currenttime + '%');
            //    $('#progressBar').on('input', function () {
            //
            //        $(this).val($(this).attr('data-time'));

            //    })

            //});

            //$('.progress').click(function (e) {

            //});

            audioControl.addEventListener('timeupdate', function () {
                var currentTime = audioControl.currentTime;
                var duration = audioControl.duration;
             ////////////////
                var currentTimeminute = audioControl.currentTime;
                var minutes = Math.floor(currentTimeminute / 60);
                var seconds = Math.floor(currentTimeminute % 60);
                // Ensure seconds are displayed with two digits
                var formattedCurrentSeconds = seconds < 10 ? '0' + seconds : seconds;
                /*  audioDurationElement.text('Duration: ' + minutes + ':' + formattedSeconds);*/

                 currentTimeminute != null ? minutes + ':' + formattedCurrentSeconds : "";

                $('#startMediaTime').text(minutes + ':' + formattedCurrentSeconds);
                ////////////////////////

                var durationTimeminute = audioControl.duration;
                var minutes = Math.floor(durationTimeminute / 60);
                var seconds = Math.floor(durationTimeminute % 60);
                // Ensure seconds are displayed with two digits
                var formattedDurationSeconds = seconds < 10 ? '0' + seconds : seconds;
                /*  audioDurationElement.text('Duration: ' + minutes + ':' + formattedSeconds);*/

                durationTimeminute != null ? minutes + ':' + formattedDurationSeconds : "";

                if (!isNaN(minutes) && !isNaN(formattedDurationSeconds)) {

                    $('#endMediaTime').text(minutes + ':' + formattedDurationSeconds);
                }

                ////////////////
                if (duration > 0) {
                    var progress = (currentTime / duration) * 100;
                    progressBar.val(progress);
                }
            });

            progressBar.on('input', function () {
                var value = $(this).val();
                var duration = audioControl.duration;
                if (duration > 0) {
                    var newTime = (value / 100) * duration;
                    audioControl.currentTime = newTime;
                }
            });

            $('.btn-media-volume').click(function () {

                var volumeElement = audioVolume
                var currentVolume = volumeElement.val();

                if (currentVolume > 0) {
                    volume = currentVolume
             /*       volumeElement.data('prevVolume', currentVolume);*/
                    volumeElement.attr('data-volume', currentVolume);
                    volumeElement.val(0);
                } else {
                    //volumeElement.val(volumeElement.data('prevVolume') || 100);
                    volumeElement.val(volume);

                }

                volumeElement.trigger('input');
            });

            //$('.btn-media-pause').click(function () {
            //    audioControl.pause();
            //});

            jQuery('div.dv-animation').fadeOut('slow');
            $(".sidebar").resizable({
                handles: 'e', // Enable resizing from the east (right) edge
                minWidth: 101,
                maxWidth: 420,
                resize: function (event, ui) {
                    $('#main').css('margin-left', ui.size.width  + 'px' );
                }
            });

            //$(".main-content").resizable({
            //    handles: 'e', // Enable resizing from the east (right) edge
            //    minWidth: 420,
            //    maxWidth: 1400,
            //    resize: function (event, ui) {
            //        debugger
            //       // $('#main').css('margin-right', ui.size.width + 'px');
            //        $('#main').css('margin-right', 100 + 'px');
            //    }
            //});
            getAlbumSideLayout();
        });

        //const wavesurfer = WaveSurfer.create({
        //    container: '#waveFromAudio',
        //    waveColor: 'rgb(200, 0, 200)',
        //    progressColor: 'rgb(100, 0, 100)',
        //    url: '/examples/audio/demo.wav',
        //})
        //wavesurfer.on('click', () => {
        //    wavesurfer.play()
        //})

        ////test pushs
        //$('.nav-link').on('click', function (e) {
        //    e.preventDefault();

        //    // Get the page name from the clicked link
        //    let page = $(this).data('page');

        //    // Use pushState to change the URL without reloading the page
        //    window.history.pushState({ page: page }, '', page);

        //    // Load the new content based on the page
        //    loadPage(page);
        //    console.log('page', page);
        //});

        //        function loadPage(page) {
        //            let content;
        //            switch (page) {
        //                case 'search':
        //                    content = $('');
        //                    break;
        //                case 'contact':
        //                    content = `  <div class="album-details d-flex">
        //    <div class="dv-album-img">
        //        <img src="/picture/Spotify Image/music_pic7_anima.jpg" alt="Anima" class="img-music-content" />
        //    </div>

        //    <div class="dv-title">
        //        <h1>Anima</h1>

        //    </div>
        //</div>`;
        //                    break;
        //                case 'otherpage': // Adding a new case for "otherpage"
        //                    content = `<div class="album-details d-flex">
        //    <div class="dv-album-img">
        //        <img src="/picture/Spotify Image/music_pic11_other.jpg" alt="Other Song" class="img-music-content" />
        //    </div>

        //    <div class="dv-title">
        //        <h1>Other Song</h1>

        //    </div>
        //</div>`;
        //                    break;
        //                default:
        //                    content = `  <div class="album-details d-flex">
        //    <div class="dv-album-img">
        //        <img src="/picture/Spotify Image/music_pic10_rayons.jpg" alt="Rayons" class="img-music-content" />
        //    </div>

        //    <div class="dv-title">
        //        <h1>Rayons</h1>

        //    </div>
        //</div>`;
        //                    break;
        //            }
        //            $('#content').html(content);
        //        }

        //        // Handle browser's back/forward buttons
        //        window.onpopstate = function (event) {
        //            if (event.state && event.state.page) {
        //                loadPage(event.state.page);
        //            } else {
        //                loadPage('home/menupage'); // Default to home page if state is undefined
        //            }
        //        };

         function changeIconClass(activeIcon, inactiveIcons) {
            if ($(activeIcon).length > 0) {
                $(activeIcon).addClass('active-icon').removeClass('inactive-icon');
            }
            $(inactiveIcons).each(function () {
                if ($(this).length > 0) {
                    $(this).addClass('inactive-icon').removeClass('active-icon');
                }
            });
        }

        //$('.icon-button').on('click', function () {
        //    debugger
        //    const activeIcon = $(this).data('target'); // The icon related to this button
        //    const inactiveIcons = $('.icon').not(activeIcon); // All other icons

        //    changeIconClass(activeIcon, inactiveIcons);
        //});

        //$('#btnHome').on('click', function () {
        //    changeIconClass('#iconHome', '#iconSearch, #iconLove, #iconAdmin');
        //});

        //$('#btnSearch').on('click', function () {
        //    changeIconClass('#iconSearch', '#iconHome, #iconLove, #iconAdmin');
        //});

        //$('#btnLove').on('click', function () {

        //    changeIconClass('#iconLove', '#iconHome, #iconSearch, #iconAdmin');
        //});

        //$('#btnAdmin').on('click', function () {

        //    changeIconClass('#iconAdmin', '#iconHome, #iconSearch, #iconLove');
        //});

        function bindingMediaLayout(data,image,albumName) {

            $('#dv-bottomside').empty();
            $('#aside').empty();
            var bottomMedia = `
                <div class="dv-bottomside-image" style = "margin:5px 15px 0px 15px" >

                    <img class="img-bottomside" src="${image}"/>
  </div >

            <div class="bottomside-title" style = "margin-bottom:5px;">
                <a class="title-artist" href="" style="color:white;margin:0;font-size:1rem; font-weight:500;" >${data.SongName}</a> <br>
                  <a class="title-artist" href="/Spot/ArtistDetails?artistname=${encodeURIComponent(data.ArtistName)}" style="color:gray;">${data.ArtistName}</a>
            </div>`;
            $('#dv-bottomside').append(bottomMedia);

            var aside = `<div class="dv-aside">
    <aside class="aside-content">
        <button class="btn" id="btnCloseAside" style="color:white">Close</button>
        <p>${albumName}</p>
        <div class="img-aside-content">
            <img id="aside_pic" src="${image}" class="img-aside" />
        </div>
        <h3 style="margin:20px 0 0 0;">${data.SongName}</h3>
         <a  class="title-artist mb-3" href="@Url.Action("ArtistDetails", "Spot")?artistname=${data.ArtistName}" style="color:white;">${data.ArtistName}</a>

         <div class="about-artist">
        <div class="aside-about-artist">
            <div class="aside-about-artist-img">
                <h6>About the artist</h6>
                  <img id="imgAsideAbout" src="" class="img-aside-about" />
            </div>
            <div class="aside-about-artist-title">

             <a  class="title-artist" href="" style="color:gray;">${data.ArtistName}</a>
                <p class="aside-about-artist-title p"></p>
            </div>
            </div>
        </div>
    </aside>
</div>`;

            //var dataArtist = {
            //    ArtistName: data.ArtistName
            //}

            $.ajax({
                type: 'POST',
                url: '@Url.Action("SearchArtist1", "Spot")',
                data: { ArtistName: data.ArtistName },
                global: false,
                dataType: "json",
                success: function (result) {

                    $('#imgAsideAbout').attr('src', result.Data[0].ArtistImagePath)
                    $('.aside-about-artist-title p').text(result.Data[0].ArtistBio);
                },

                error: function (request, status, error) {
                    console.log(error);
                }
            });

            $('#aside').append(aside);
        }
        $('#fileSongFile').change(function (e) {

            var file = e.target.files[0];
            var url = URL.createObjectURL(file);

            $(audioControl).on('loadedmetadata', function () {

                duration = audioControl.duration;
                var minutes = Math.floor(duration / 60);
                var seconds = Math.floor(duration % 60);
                // Ensure seconds are displayed with two digits
                var formattedSeconds = seconds < 10 ? '0' + seconds : seconds;
                audioDurationElement.text('Duration: ' + minutes + ':' + formattedSeconds);
                $('#durationInput').val(parseInt(duration));
            });

            if ($('#fileSongFile').val() != null) {
                $('#songAudio').attr('src', url);
            }
            else {
                $('#songAudio').removeAttribute('src')
            }
            audioControl.load(); // Reload audio player to apply the new source
            $('#audiocontrol').show();
        });

        $('#tblDataTableSongAlbum tbody').on('click', 'tr', function () {
            console.log('hispot');
            var rowDataAlbum = $('#tblDataTableSongAlbum').DataTable().row(this).data();
            if (rowDataAlbum) {
                $('#songAudio').attr('src', rowDataAlbum.SongFilePath);
                // Load the new audio source
                audioControl.load();
                $('#audiocontrol').show();
                // Play the audio (optional)
                // audioControl.play();
            } else {
                console.error('Row data is null or undefined');
            }
        });

        function getAlbumContainer() {
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetAlbum1", "Spot")',
                dataType: "json",
                success: function (result) {

                    result.Data.forEach(function (album, index) {

                        count = index + 1;
                        var albumHtml = `
                    <div class="col-xxl-2 col-lg-4 col-6 dv-content" data-album-id="${album.AlbumId}">
                        <div class="music-content">
                            <img id="music_pic${count}" src="${album.AlbumImagePath}" class="img-music-content" />
                        </div>
                        <div class="music-content-title">
                            <h6 class="link-opacity-100-hover text-content" href="#" data-bs-toggle="tooltip" data-bs-html="true" data-bs-placement="top"
                    title="${album.AlbumName}">${album.AlbumName}</h6>
                            <p class="link-opacity-100-hover text-content" href="#" data-bs-toggle="tooltip" data-bs-html="true" data-bs-placement="top"
                    title="${album.ArtistName}">${album.ArtistName}</p>
                        </div>
                    </div>
                `;
                        $('.main-content-music').append(albumHtml);
                        // Initialize tooltips after appending the content
                        var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
                        tooltipTriggerList.map(function (tooltipTriggerEl) {
                            return new bootstrap.Tooltip(tooltipTriggerEl)
                        });
                    });

                    $('.dv-content').on('click', function () {
                        var albumId = $(this).data('album-id');
                        window.location.href = '@Url.Action("AlbumDetails", "Spot")?albumId=' + albumId
                    });
                },

                error: function (request, status, error) {
                    console.log(error);
                }
            });
        }

            function getAlbum() {
         $.ajax({
             type: 'POST',
             url: '@Url.Action("GetAlbum1", "Spot")',
             dataType: "json",
             success: function (result) {

                 //bindingTableSongAlbum(result.Data);
                 /* bindingTable(result.Data); */
             },
             error: function (request, status, error) {
                 console.log(error);
             }
         });
     }
             @*function getAlbumSideLayout() {
    $.ajax({
        type: 'POST',
        url: '@Url.Action("GetAlbum1", "Spot")',
        dataType: "json",
        success: function (result) {

            result.Data.forEach(function (album, index) {

                 count = index + 1;
                var albumHtml = `
                    <div class="imgArtist" data-album-id="${album.AlbumId}">
                    <a href = "#">
                    <img src="${album.AlbumImagePath}"/>
                    </a>
                    </div>`;

                $('.lib-sidebar').append(albumHtml);
            });

            $('.imgArtist').on('click', function () {

       var albumId = $(this).data('album-id');
       window.location.href = '@Url.Action("AlbumDetails", "Spot")?albumId=' + albumId
   });
        },
        error: function (request, status, error) {
            console.log(error);
        }
    });
        }*@

        function getAlbumSideLayout1() {
    $.ajax({
        type: 'POST',
        url: '@Url.Action("GetAlbum1", "Spot")',
        dataType: "json",
        success: function (result) {

            result.Data.forEach(function (album, index) {

              var albumHtml = `
    <div class="imgArtist" data-album-id="${album.AlbumId}" data-bs-toggle="tooltip" data-bs-html="true" data-bs-placement="right"
         title="
                   ${album.AlbumName}<br>
                  ${album.ArtistName}
             ">
  <a href="@Url.Action("AlbumDetails", "Spot")?albumId=${album.AlbumId}">
     <img src="${album.AlbumImagePath}" />
 </a>

    </div>`;

$('.lib-sidebar').append(albumHtml);
            });
            // Initialize tooltips after appending the content
            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
            tooltipTriggerList.map(function (tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl)
            });
        },
        error: function (request, status, error) {
            console.log(error);
        }
    });
        }

                function getAlbumSideLayout() {
    $.ajax({
        type: 'POST',
        url: '@Url.Action("GetFavAlbumAndArtistByUser1", "Spot")',
        dataType: "json",
        global:false,
        success: function (result) {
            $('#contentLibSideBar').empty();
   //         var Heart = `               <div class=""style="text-align:center;">
   //    <a href="/Spot/FavoriteSong"class="btn iconlove nav-link" id="btnLove"><i class="fa-regular fa-heart" id="iconLove" style="color: #bfbfbf"></i></a>
   //</div>`
   //         $('#contentLibSideBar').append(Heart);
            result.Data.forEach(function (sideData, index) {

                var sideFavData = result.Data
                if (sideFavData[index].FavoriteArtist) {

                    var Html = `


                       <div class="imgArtist circle" data-album-id="${sideData.AlbumId}" data-bs-toggle="tooltip" data-bs-html="true" data-bs-placement="right"
                            title="
                                      ${sideData.ArtistName}<br>
                                    <span>Artist</span>
                                ">

                     <a href="@Url.Action("ArtistDetails", "Spot")?artistname=${sideData.ArtistName}">
                        <img src="${sideData.ArtistImagePath}" />
                    </a>
                       </div>`;
                }
                else {
                    var Html = `
                    <div class="imgArtist" data-album-id="${sideData.AlbumId}" data-bs-toggle="tooltip" data-bs-html="true" data-bs-placement="right"
                         title="
                                   ${sideData.AlbumName}<br>
                                  ${sideData.ArtistName}
                             ">
                  <a href="@Url.Action("AlbumDetails", "Spot")?albumId=${sideData.AlbumId}">
                     <img src="${sideData.AlbumImagePath}" />
                 </a>
                    </div>`;
                }

                //$(Html).hide().appendTo('.lib-sidebar').fadeIn();
                $('#contentLibSideBar').append(Html);
            });
            // Initialize tooltips after appending the content
            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
            tooltipTriggerList.map(function (tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl)
            });
        },
        error: function (request, status, error) {
            console.log(error);
        }
    });
}

        function toggleAsideDisplay() {
            $('#aside').toggle();
            $('.main-content').toggleClass('col-12');
          //  $('.main-content').toggleClass('col-9 col-7 col-lg-12 col-12');
        }



        function logOut() {
            $.ajax({
                type: 'POST',
                url: '@Url.Action("Logout1", "Authen")',
                dataType: "json",
                success: function (result) {
                    if (result.success) {
                        window.location.href = "https://localhost:7166/Admin/LoginPage";
                    }
                    //bindingTableSongAlbum(result.Data);
                    /* bindingTable(result.Data); */
                },
                error: function (request, status, error) {
                    console.log(error);
                }
            });
        }


        function getProfileImage() {
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetProfileImage1", "Spot")',
                dataType: "json",
                success: function (result) {
                    debugger;
                    var profileDataName = result.Data[0].Name
                    $('.profile').attr('title', profileDataName)
                    $('.profile')
                        .tooltip('dispose') // Remove old tooltip instance
                        .tooltip();

                    $('#profileImage').attr('src', result.Data[0].ProfileImagePath);
                    //bindingTableSongAlbum(result.Data);
                    /* bindingTable(result.Data); */
                },
                error: function (request, status, error) {
                    console.log(error);
                }
            });
        }

    </script>
    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>
