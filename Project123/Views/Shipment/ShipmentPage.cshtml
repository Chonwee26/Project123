

@model ShipmentModel;
@{
    Layout = "~/Views/Shared/_PostLayout.cshtml";
}

@section Styles{

    <!-- Css -->
    <link href="~/lib/dataTables/css/jquery.dataTables.min.css" rel="stylesheet" />

    <style type="text/css">


        .select2-container--default .select2-results__option--highlighted.select2-results__option--selectable {
            background-color: #0054FF !important;
            color: white;
        }

        .select2-container--default .select2-results__option--highlighted[aria-selected], .select2-container--default .select2-results__option--highlighted[aria-selected]:hover {
            background-color: #00B0F0;
            color: #fff;
        }

        .select2-container--default.select2-container--focus .select2-selection--multiple, .select2-container--default.select2-container--focus .select2-selection--single {
            border-color: #0054FF !important;
        }

        .select2-container--default .select2-selection--multiple .select2-selection__choice,
        .select2-container--default .select2-selection--multiple .select2-selection__choice__remove,
        .selectgroup-input:checked + .selectgroup-button {
            color: #00A0DA;
            border-color: #00A0DA;
            background-color: rgba(167,239,239,.15);
        }

        .select2-container--default .select2-selection--single, .select2-container--default .select2-selection--multiple {
            line-height: 1.5;
            color: #495057;
            background-color: #fff;
            background-clip: padding-box;
            border: 1px solid #d0d4dd;
            border-radius: .25rem;
            transition: border-color .15s ease-in-out,box-shadow .15s ease-in-out;
        }

        .select2-container--default.select2-container--focus .select2-selection--multiple {
            border: 1px solid #1572e8;
            outline: 0;
        }

        .select2-container {
            width: 100% !important;
            vertical-align: middle;
        }

        .select2-dropdown {
            z-index: 13000;
        }

        /*style select2 multiple*/
        .select2-container .select2-selection--multiple {
            min-height: 38px;
        }

        /* ถ้าปิดตรงนี้ ตรงที่พิม Select 2 จะไม่เห็นกรอบ */
        .select2-container--default .select2-dropdown .select2-search__field:focus, .select2-container--default .select2-search--inline .select2-search__field:focus {
            /*border: 0;*/
        }

        .select2-container .select2-search--inline .select2-search__field {
            height: 26px;
        }
        /*end style select2 multiple*/

        /* select2 style testing */
        .select2-container--default .select2-selection--single, .select2-container--default .select2-selection--multiple {
            border: 1px solid #ebedf2;
        }

        .select2-selection__rendered {
            height: 28px !important;
            padding: 7px;
            line-height: 1.5 !important;
            font-size: 14px;
            padding: .25rem .5rem !important;
            font-size: .875rem !important;
        }

        .select2-container--default .select2-selection--single .select2-selection__rendered {
            color: #000;
        }

        .select2-dropdown {
            background-color: white;
            border: 1px solid #ebedf2;
            border-radius: 4px;
            box-sizing: border-box;
            display: block;
            position: absolute;
            left: -100000px;
            width: 100%;
            font-size: 14px;
            z-index: 1051;
        }

        .select2-container--default .select2-results__option--highlighted[aria-selected], .select2-container--default .select2-results__option--highlighted[aria-selected]:hover {
            background-color: #00B0F0;
            color: #fff;
        }

        .select2-container--default.select2-container--focus .select2-selection--multiple, .select2-container--default.select2-container--focus .select2-selection--single {
            border-color: #00B0F0;
        }

        .select2-container--default .select2-results__option--highlighted.select2-results__option--selectable {
            background-color: #00B0F0;
            color: white;
        }

        .select2-results__option--selectable {
            color: #000;
        }

        .select2-container--default .select2-selection--single .select2-selection__arrow {
            height: 26px;
            position: absolute;
            top: 2px;
            right: 4px;
            width: 20px;
        }

        .select2-container--default .select2-selection--single .select2-selection__clear {
            margin-top: 1px;
            margin-right: 8px;
            color: #888888;
        }
        /* end select2 style */

        .datetimepickerSearch {
            width: 297px !important;
        }

        .datetimepickerCreate {
            width: 635px !important;
        }

        .input555 {
            position: relative;
        }




            .input555 i {
                position: absolute;
                right: 15px;
                top: 50%;
                transform: translateY(-50%);
            }

        .qr-code {
            max-width: 200px;
            margin: 10px;
        }

        #reader {
            position: absolute !important;
            top: 0;
            left: 0;
            z-index: 9999;
            background-color: white;
        }

        #qr-shaded-region {
            border-color: rgba(0, 0, 0, 0) !important;
        }

        #btnCloseMd {
            position: absolute;
            top: 20px;
            left: 20px;
            color: #b4b4b4;
            z-index: 99999;
            cursor: pointer;
        }

        #btnSelectImg {
            position: absolute;
            top: 20px;
            right: 20px;
            color: #b4b4b4;
            z-index: 99999;
            cursor: pointer;
        }

        #qr-reader__dashboard {
            display: none;
        }

        .btn-delete {
            cursor: pointer;
        }

        .btn-edit {
            cursor: pointer;
        }
    </style>


    <!-- Modal Create -->
    <div class="modal fade" id="createQrCodeModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h1 class="modal-title fs-5" id="exampleModalLabel">Create QR Code</h1>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <!--เดี๋ยวมาทำต่อ กด ปุ่มสร้าง qrcode แล้วเด้ง modal-->
                    <div class="container-fluid">
                        <div class="text-center">

                            <!-- Get a Placeholder image initially,
                                 this will change according to the
                                 data entered later -->

                            <img src="https://api.qrserver.com/v1/create-qr-code/?size=300x300&data=Example"
                                 class="qr-code img-thumbnail img-responsive" id="imageQR" />
                        </div>

                        <div class="form-horizontal">
                            <div class="form-group d-flex">
                                <div class="row">
                                    <label class="control-label col-sm-12"
                                           for="OrderNumber">
                                        หมายเลขออเดอร์:
                                    </label>
                                    <div class="col-sm-8">

                                        <!-- Input box to enter the
                                        required data -->
                                        <input type="text" size="60"
                                               maxlength="60" class="form-control"
                                               id="content" placeholder="Enter content" />
                                    </div>
                                    <div class="col-sm-3">

                                        <button type="button" class="btn btn-primary" id="btnDownload">Download</button>
                                    </div>

                                    <div class="form-group">
                                        <div class="col-sm-offset-2 col-sm-10">

                                            <!-- Button to btnGenerate QR Code for
                                            the entered data -->
                                            <button type="button" class="btn btn-secondary  mt-3" id="btnGenerate">
                                                Generate QRCode
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>

                </div>
            </div>
        </div>
    </div>
}

<!-- ModalSearch -->
<div class="modal fade" id="searchQrCodeModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="exampleModalLabel">Search QR Code</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <!--Scan Qr code-->
                <div id="mdlScanBarcode" class="modal fade" tabindex="-1" role="dialog" data-keyboard="false" data-backdrop="static">
                    <div class="modal-dialog modal-fullscreen" role="document">
                        <div class="modal-content">
                            <div class="modal-body p-0">
                                <div class="dv-scan-barcode">
                                    <div id="qr-reader" style="width: 100%; height: 100%;"></div>
                                </div>
                                <div class="row">
                                    <div class="col-4">
                                        <button type="button" class="btn btn-disabled fw-bold" data-dismiss="modal" id="btnCloseMd">ย้อนกลับ</button>
                                    </div>
                                    <div class="col-4">
                                        <button type="button" class="btn btn-disabled" data-dismiss="modal" id="btnSelectImg"><i class="fa-solid fa-image" style="font-size:24px;"></i></button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <button class="btn-scan-barcode">Scan Barcode</button>
                <input class="form-control" id="Skuean" />



                <form id="qrForm" enctype="multipart/form-data" action="https://api.qrserver.com/v1/read-qr-code/" method="POST">
                    <input type="hidden" name="MAX_FILE_SIZE" value="1048576" />
                    Choose QR code image to read/scan: <input name="file" type="file" />
                    <input type="submit" value="Read QR code" />
                </form>
                <div id="result"></div>

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>

            </div>
        </div>
    </div>
</div>


@*
    <h1 class="text-center">ข้อมูลการจัดส่ง</h1>

        <form method="POST" asp-controller="Shipment" asp-action="CreateShipmentAjax">
        <div class="form-group">
            <label asp-for="ShipDate">ShipDate</label>
            <input type="date" asp-for="ShipDate" class="form-control" />
        </div>
        <div class="form-group">
            <label asp-for="FullName">FullName</label>
            <input type="text" asp-for="FullName" class="form-control" />
        </div>
        <div class="form-group">
            <label asp-for="MobileNumber">MobileNumber</label>
            <input type="text" asp-for="MobileNumber" class="form-control" />
        </div>
        <button class="btn btn-success" type="submit">Submit</button>
    </form>*@


<nav>
    <div class="nav nav-tabs" id="nav-tab" role="tablist" hidden>
        <button class="nav-link active" id="searchTab" data-bs-toggle="tab" data-bs-target="#nav-home" type="button" role="tab" aria-controls="nav-home" aria-selected="true">Search</button>
        <button class="nav-link" id="createTab" data-bs-toggle="tab" data-bs-target="#nav-profile" type="button" role="tab" aria-controls="nav-profile" aria-selected="false">Create</button>
    </div>
</nav>
<div class="tab-content" id="nav-tabContent">
    <div class="tab-pane fade show active" id="nav-home" role="tabpanel" aria-labelledby="nav-home-tab">

        <div class="container mt-5">

            <div class="row">

                <form id="frmSearchShipment">
                    <div class="col-12">


                        <h1 class=" d-flex justify-content-center">- Shipment info -</h1>
                        <hr />
                        @*first*@
                        <div class="row pb-3">
                            <div class="col-12 col-sm-12 col-md-6 ">
                                <h6>หมายเลขออเดอร์</h6>
                                <div class="input-group">
                                    <input type="text" class="form-control" id="txtOrderNumber" name="OrderNumber" />
                                </div>
                            </div>


                            <div class="col-12 col-sm-12 col-md-6 ">
                                <h6>ชื่อ-สกุล</h6>
                                <div class="input-group">
                                    <input type="text" class="form-control" id="txtSearchFullName" name="FullName" />
                                </div>
                            </div>
                        </div>
                        <div class="row pb-3">
                            <div class="col-12 col-sm-12 col-md-6 ">
                                <h6>หมายเลขโทรศัพท์</h6>
                                <div class="input-group">
                                    <input type="text" class="form-control" id="txtSearchMobileNumber" name="MobileNumber" maxlength="10" />
                                </div>
                            </div>
                            <div class="col-12 col-sm-12 col-md-6 ">

                                <h6>วันที่ส่ง</h6>
                                <div class="input-group">
                                    <div class="input555">
                                        <input type="text" class="form-control datetimepicker datetimepickerSearch" id="txtSearchShipDateFR" name="ShipDateFR">
                                        <i class="fa-regular fa-calendar input-icon-addon"></i>
                                    </div>
                                    <span class="input-group-text">ถึง</span>
                                    <div class="input555">
                                        <input type="text" class="form-control datetimepicker datetimepickerSearch" id="txtSearchShipDateTO" name="ShipDateTO">
                                        <i class="fa-regular fa-calendar input-icon-addon"></i>
                                    </div>
                                </div>
                            </div>
                        </div>
                        @*end first*@
                        @* Start second*@
                        <div class="row pb-3">
                            <div class="col-12 col-sm-12 col-md-6 ">

                                <h6>สถานที่เก็บสินค้า</h6>
                                <div class="input-group">
                                    <select class="form-select select2 select2-select" id="ddlSearchStorage" style="width:100%" name="Storage">
                                    </select>
                                </div>
                            </div>
                            <div class="col-12 col-sm-12 col-md-6 ">
                                <h6>สถานะขนส่ง</h6>
                                <div class="input-group">
                                    <select class="form-select select2 select2-select" id="ddlSearchShipmentStatus" name="ShipmentStatus">
                                    </select>
                                </div>
                            </div>




                            <div class="  col-8 p-3 d-flex   ">

                                <button type="button" id="btnCreate" class="btn btn-success mx-2 px-4 ">สร้าง</button>
                                <!-- Button trigger modal -->
                                <button type="button" id="btnCreateQrCode" class="btn btn-success " data-bs-toggle="modal" data-bs-target="#exampleModal">
                                    สร้าง Qrcode
                                </button>

                            </div>

                            <div class="  col-4 p-3 d-flex  justify-content-end ">

                                <button type="button" id="btnReset" class="btn btn-secondary mx-2 px-4 ">ล้าง</button>
                                <button type="submit" id="btnSearch" class="btn btn-primary mx-2 px-4 ">ค้นหา</button>
                                <button type="button" id="btnSearchQrCode" class="btn btn-primary " data-bs-toggle="modal" data-bs-target="#exampleModal">
                                    ค้นหาด้วย Qrcode
                                </button>
                            </div>


                            <hr />

                            @* end second *@

                            <div class="col-12" id="dvTable" style="display:none">
                                <table id="tblDataTable" class="table table-bordered" width="100%">
                                    <thead>
                                        <tr class="text-center">
                                            <th>แก้ไขสินค้า</th>
                                            <th>หมายเลขออเดอร์</th>
                                            <th>ชื่อ</th>
                                            <th>เบอร์โทรศัพท์</th>
                                            <th>ที่เก็บสินค้า</th>
                                            <th style="width:400px!important;">สถานะสินค้า</th>
                                            <th>วันจัดส่ง</th>
                                            <th>ลบสินค้า</th>

                                        </tr>
                                    </thead>
                                    <tbody>
                                    </tbody>
                                </table>
                            </div>


                        </div>
                    </div>
                </form>
            </div>
        </div>

    </div>
    <div class="tab-pane fade" id="nav-profile" role="tabpanel" aria-labelledby="nav-profile-tab">
        <partial name="_LogisticView" />
    </div>
    <div class="tab-pane fade" id="nav-contact" role="tabpanel" aria-labelledby="nav-contact-tab">...</div>
</div>






@section Scripts{
    <script src="~/lib/dataTables/js/jquery.dataTables.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/html5-qrcode/2.3.8/html5-qrcode.min.js" integrity="sha512-r6rDA7W6ZeQhvl8S7yRVQUKVHdexq+GAlNkNNqVC7YyIV+NwqCTJe2hDWCiffTyRNOeGEzRRJ9ifvRm/HCzGYg==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>

    <script type="text/javascript">
        var dataTable;
        var newShipment = [];
        var SaveStatus;
        var SaveUrl;
        var DataShipment;
        var rowData;
        var oldInput = -1;
        $(document).ready(function () {

            $('#tblDataTable').DataTable();

            $('#ddlSearchStorage').on('select2:select', function () {


            });
            //getShipmentStatus('','#ddlSearchShipmentStatus');
            getShipmentStatusAsync('','#ddlSearchShipmentStatus');
            //getShipmentLocation('','#ddlSearchStorage');
            getShipmentLocationAsync('','#ddlSearchStorage');

        });
      

        $(document).on('click', '#tblDataTable .btn-edit-storage', function () {
            debugger
            checkSearchCheckMove = true;

            var table = $('#tblDataTable').DataTable();
            var rowIndex = table.row($(this).parents('tr')).index();
            var rowData = table.row($(this).parents('tr')).data();

            if ($("#dvCheckMove" + rowData.OrderNumber).attr("data-input") != "true") {
                debugger
                var html = `<div class="d-flex">
                  <select class='form-control' style="height: 40px !important;" id="selCheckMove${rowIndex}">
            <option value="Option1">Option 1</option>
            <option value="Option2">Option 2</option>
            <option value="Option3">Option 3</option>
        </select>
                <button type="button" class="btn btn-danger ml-2 mr-2" style="width: 75px; height: 40px !important; padding: 5px 10px;" id="btnDeleteInput${rowIndex}" onclick="deleteInput(${rowIndex})"><i class="fa fa-times m-0" aria-hidden="true"></i></button>
                <button type="button" class="btn btn-success" style="width: 75px; height: 40px !important; padding: 5px 10px;" id="btnSaveInput${rowIndex}" onclick="saveInput(${rowIndex}, '${rowData[0]}')"><i class="fa fa-check m-0" aria-hidden="true"></i></button>
            </div>`;

                if (oldInput >= 0) {
                    debugger
                    deleteInput(oldInput);
                }

                $("#dvCheckMove" + rowData.OrderNumber).attr("data-input", "true");
                $("#dvCheckMove" + rowData.OrderNumber).append(html);
                oldInput = rowIndex;
            }
            $(this).closest('tr').find('td:eq(4)').hide(); // Hide the second cell (Product Name) in the row

            // $("#checkProductName" + rowIndex).hide();
        });


        function deleteInput(rowIndex) {
            debugger
            $("#dvCheckMove" + rowData.OrderNumber).attr("data-input", "false").empty();
            //$("#checkProductName" + rowIndex).show();
            $("#tblCheckMove").find('tr').eq(rowIndex + 1).find('td:eq(1)').show(); // Show the second cell (Product Name) in the row

            oldInput = -1;
        }

        function saveInput(rowIndex, checkId) {
            debugger
            var inputValue = $("#txtCheckMove" + rowIndex).val();
            console.log("Saving input:", inputValue, "for Check ID:", checkId);

            // Handle saving input value here (e.g., AJAX request to the server)
            deleteInput(rowIndex);
        }

        $('.select2').select2({
            width: 'resolve'

        });

        // Function to HTML encode the text
        // This creates a new hidden element,
        // inserts the given text into it
        // and outputs it out as HTML

        function htmlEncode(value) {
            return $('<div/>').text(value).html();
        }

        $(function () {

            // Specify an onclick function
            // for the btnGenerate button

            $('#btnGenerate').click(function () {

                // btnGenerate the link that would be
                // used to btnGenerate the QR Code
                // with the given data
                var content = $('#content').val();
                var qrCodeUrl = 'https://api.qrserver.com/v1/create-qr-code/?size=300x300&data=' + encodeURIComponent(content);

                $('#imageQR').attr('src', qrCodeUrl);

                //var content = htmlEncode($('#content').val());

                //var finalURL =
                //    'https://api.qrserver.com/v1/create-qr-code/?size=300x300&data=' +
                //    content;

                //// Replace the src of the image with
                //// the QR code image
                //$('.qr-code').attr('src', finalURL);
                });
            //    $('#btnGenerate').click(function () {
            //    // btnGenerate the link that would be
            //    // used to btnGenerate the QR Code
            //    // with the given data

            //    var content = htmlEncode($('#content').val());

            //    var finalURL =
            //        'https://api.qrserver.com/v1/create-qr-code/?size=300x300&data=' +
            //        content;

            //    // Replace the src of the image with
            //    // the QR code image
            //    $('.qr-code').attr('src', finalURL);
            //});
        });

        $('#qrForm').submit(function (event) {

            event.preventDefault(); //กันไปอีกหน้า

            var formData = new FormData($(this)[0]); // Get form data
            $.ajax({
                url: 'https://api.qrserver.com/v1/read-qr-code/',
                type: 'POST',
                data: formData,
                processData: false,
                contentType: false,
                success: function (data) {

                    if (data.length > 0) {



                        // Handle extracted data
                        displayResult(data[0].symbol[0].data);
                        $('#txtOrderNumber').val(data[0].symbol[0].data);
                        $('#btnSearch').click();
                    }
                    else {
                        SweetAlert('error', 'ไม่มีข้อมูล');
                    }
                },
                error: function (xhr, status, error) {
                    console.error('Error:', error);
                }
            });
        });

        // ----------- Hide select arrow -----------
        $(document).on('select2:select', '.select2', function (e) {
            $(this).parent().find('.select2-container--default .select2-selection--single .select2-selection__arrow').hide();
        });

        $(document).on('change', '.select2', function (e) {
            if ($(this).val() == "" || $(this).val() == null) {
                $(this).parent().find('.select2-container--default .select2-selection--single .select2-selection__arrow').show();
            } else {
                $(this).parent().find('.select2-container--default .select2-selection--single .select2-selection__arrow').hide();
            }
        });

            function getShipmentStatus(id,elementId) {
        id = id == null ? "" : id

        $.ajax({
            type: 'POST',
            url: '@Url.Action("GetShipmentStatus","Shipment")',
            datatype: 'json',
            success: function (result) {

                $(elementId).html('');
                $(elementId).select2({
                    placeholder:'--- ทั้งหมด ---',
                    allowClear: true,
                    data: $.map(result.Data, function (item) {
                        return {
                            id: item.ShipmentItemID,
                            text: item.ShipmentItemText
                        };
                    })
                });
                if (id != '') {
                    $(elementId).val(id).change();
                }
                else {
                    $(elementId).val(null).change();
                }
            }
        });
        }
        function getShipmentStatusAsync(id, elementId) {

        id = id == null ? "" : id

        $.ajax({
            type: 'GET',
            url: '@Url.Action("GetShipmentStatusAsync","Test")',
            datatype: 'json',
            success: function (result) {

                $(elementId).html('');
                $(elementId).select2({
                    placeholder:'--- ทั้งหมด ---',
                    allowClear: true,
                    data: $.map(result.Data, function (item) {
                        return {
                            id: item.ShipmentItemID,
                            text: item.ShipmentItemText
                        };
                    })
                });
                if (id != '') {
                    $(elementId).val(id).change();
                }
                else {
                    $(elementId).val(null).change();
                }
            }
        });
    }


        function getShipmentLocation(id,elementId) {
            id = id == null ? "" : id

            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetShipmentLocation","Shipment")',
                datatype: 'json',
                success: function (result) {

                    $(elementId).html('');
                    $(elementId).select2({
                        placeholder:'--- ทั้งหมด ---',
                        allowClear: true,
                        data: $.map(result.Data, function (item) {
                            return {
                                id: item.ShipmentItemID,
                                text: item.ShipmentItemText
                            };
                        })
                    });
                    if (id != '') {
                        $(elementId).val(id).change();
                    }
                    else {
                        $(elementId).val(null).change();
                    }
                }
            });
        }

         function getShipmentLocationAsync(id,elementId) {
     id = id == null ? "" : id

     $.ajax({
         type: 'GET',
       /*  url: '/Test/GetShipmentLocationAsync',*/
           url: '@Url.Action("GetShipmentLocationAsync","Test")',
         datatype: 'json',
         success: function (result) {

             $(elementId).html('');
             $(elementId).select2({
                 placeholder:'--- ทั้งหมด ---',
                 allowClear: true,
                 data: $.map(result.Data, function (item) {
                     return {
                         id: item.ShipmentItemID,
                         text: item.ShipmentItemText
                     };
                 })
             });
             if (id != '') {
                 $(elementId).val(id).change();
             }
             else {
                 $(elementId).val(null).change();
             }
         }
     });
 }

        function displayResult(data) {
            // Display extracted data in the "result" div
            $('#result').html(JSON.stringify(data, null, 2));
        }


        $('#btnCloseMd').click(function () {
            $('#html5-qrcode-button-camera-stop').trigger('click');
            $('#qr-reader').empty();
            $("#mdlScanBarcode").modal('hide');
        });

        var typeSelectImg = false;
        $('#btnSelectImg').click(function () {
            $('#html5-qrcode-button-camera-stop').trigger('click');
            setTimeout(
                function () {
                    $('#html5-qrcode-anchor-scan-type-change').trigger('click');
                    if (typeSelectImg) {
                        $('#html5-qrcode-button-camera-start').trigger('click');
                        $('#btnSelectImg').html('<i class="fa-solid fa-image" style="font-size:24px;"></i>');
                        typeSelect = false;
                    }
                    else {
                        $('#html5-qrcode-button-file-selection').trigger('click');
                        $('#btnSelectImg').html('<i class="fa-solid fa-expand" style="font-size: 24px;"></i>');
                        typeSelectImg = true;
                    }
                }, 200);
        });

        $(document).on("click", ".btn-scan-barcode", function () {
            var status = false;
            var html5QrcodeScanner = new Html5QrcodeScanner("qr-reader", {
                fps: 10,
                qrbox: 250,
                videoConstraints: {
                    facingMode: "environment", // Use "environment" for back camera
                    aspectRatio: 1.7777778
                },
            });

            const onScanSuccess = (decodedText, decodedResult) => {
                if (decodedText != '' && !status) {
                    $('#Skuean').val(decodedText).trigger('change');
                    $("#mdlScanBarcode").modal('hide');
                    status = true;
                }
                html5QrcodeScanner.clear();
            }
            setTimeout(
                function () {
                    html5QrcodeScanner.render(onScanSuccess);
                    $('#html5-qrcode-button-camera-permission').trigger('click');
                }, 500);

            $("#mdlScanBarcode").modal('show');
        });




        $('#frmSearchShipment').validate({
            rules: {

            },
            messages: {

            },
            errorPlacement: function (error, element) {

            },


            submitHandler: function (form) {
                var inputDate = $('#txtSearchShipDateFR').val();
                var formattedDate = "";

                // Check if inputDate is a valid date in the format DD/MM/YYYY
                if (moment(inputDate, 'DD/MM/YYYY', true).isValid()) {
                    // If valid, format the date as YYYY-MM-DD
                    formattedDate = moment(inputDate, 'DD/MM/YYYY').format('YYYY-MM-DD');
                    inputDate = formattedDate;
                }

                var frmSearch = $('#frmSearchShipment').serialize();

                var frmSearch1 = {
                    OrderNumber: $('#txtOrderNumber').val()
                }

                  $.ajax
      ({
          type: 'POST',
          url: '@Url.Action("SearchShipmentAsync", "Test")',
          data: frmSearch,
          dataType: "json",
          success: function (result) {





                  bindingTableAll(result.Data);
              /*    bindingTable(result.Data);*/



          },
          error: function (request, status, error) {
              SweetAlert('error', error);
          }
      });
                @*$.ajax
      ({
          type: 'POST',
          url: '@Url.Action("SearchShipmentAll", "Shipment")',
          data: frmSearch,
          dataType: "json",
          success: function (result) {
              if (result.Message == "S") {


                  $('#tblDataTable').dataTable().empty();
                  bindingTableAll(result.Data);
              /*    bindingTable(result.Data);*/
              }
              else {
                  SweetAlert('error', 'กรุณาใส่ข้อมูลให้ถูกต้อง');
              }



          },
          error: function (request, status, error) {
              SweetAlert('error', error);
          }
      });*@
            }

        });

        $('#frmCreateShipment').validate({
            rules: {

            },
            messages: {

            },
            errorPlacement: function (error, element) {

            },


            submitHandler: function (form) {

                ////var frmData = $('#frmCreateShipment').serializeArray();
                //frmData.push({ name: 'additionalKey1', value: value1 });
                //frmData.push({ name: 'additionalKey2', value: value2 });
                //// Add more key-val frmCreate.change()
                //// Convert the data object to a query string
                //var serializedData = $.param(frmData);
             /*   moment($('#txtShipDate').val(), 'DD/MM/YYYY').format('YYYY-MM-DD');*/
                var frmCreate = $('#frmCreateShipment').serializeArray();
                const currentTime = new Date($.now());


                frmCreate.push({ name: 'CreateDate', value: currentTime });
                if (SaveStatus =="Update") {
                    frmCreate.push({ name: 'OrderNumber', value: rowData.OrderNumber });
                }
                //if ($('#ddlCreateShipmentStatus').val() == '') {
                //    $('#ddlCreateShipmentStatus').val('');
                //}

                var serializedCreate = $.param(frmCreate);

                if (SaveStatus == "Create") {
                    SaveUrl = '@Url.Action("CreateShipmentAsync", "Test")';
                    DataShipment = serializedCreate
                }
       else {
                    SaveUrl = '@Url.Action("UpdateShipmentAsync", "Test")';
                    DataShipment = serializedCreate
       }



                Swal.fire({
                    icon: "question",
                    title: "ยืนยันสร้างShipment",
                    text: $('#txtFullName').val(),
                    showCancelButton: true,
                    confirmButtonText: "ยืนยัน",
                    cancelButtonText: "ยกเลิก",
                    reverseButtons: true,
                }).then((result) => {
                    if (result.isConfirmed) {
                        @*$.ajax
                            ({
                                type: 'POST',
                                url: '@Url.Action("CreateShipmentAjax1", "Shipment")',
                                data: serializedCreate,
                                dataType: "json",
                                success: function (result) {
                                    if (result.Status = "S") {
                                        SweetAlert('success', result.Message);
                                        $(".nav button#searchTab").tab('show');
                                        $('#txtOrderNumber').val(result.Data.OrderNumber);
                                        $('#btnSearch').click();
                                    }
                                    else {
                                        SweetAlert('error', 'กรุณาใส่ข้อมูลให้ถูกต้อง');
                                    }
                                },
                                error: function (request, status, error) {
                                    SweetAlert('error', error);
                                }
                            });*@

                        $.ajax
                            ({
                                type: 'POST',
                                url: SaveUrl,
                                data: DataShipment,
                                dataType: "json",
                                success: function (result) {

                                    SweetAlert('success', result.message);
                                    $(".nav button#searchTab").tab('show');

                                    if (result.status = "S") {
                                        clearSearchValue()
                                        if (SaveStatus == "Create") {

                                            console.log("C")

                                            $('#txtOrderNumber').val(result.message);
                                            $('#btnSearch').click();
                                        }

                                        else {

                                            const order = $('#txtOrderNumber').val();

                                            $('#txtOrderNumber').val(rowData.OrderNumber);
                                            $('#btnSearch').click();
                                        }


                                    }
                                    else {
                                        SweetAlert('error', 'กรุณาใส่ข้อมูลให้ถูกต้อง');
                                    }
                                },
                                error: function (request, status, error) {
                                    SweetAlert('error', error);
                                }
                            });
                    }
                });
                $(".swal2-confirm").addClass('btn-swal-success');
                $(".swal2-cancel").addClass('btn-swal-secondary');
            }
        });



        $('#btnCreate').click(function () {
            $(".nav button#createTab").tab('show');
            clearSearchValue();
            clearCreateValue();
            getShipmentLocationAsync('', '#ddlCreateStorage');
            getShipmentStatusAsync('', '#ddlCreateShipmentStatus');
            SaveStatus = "Create";
            //getShipmentStatus('', '#ddlCreateShipmentStatus');
        });

        $('#btnCreateQrCode').click(function () {
            $('#createQrCodeModal').modal('show');
        });
        $('#btnSearchQrCode').click(function () {
            $('#searchQrCodeModal').modal('show');
            $('#qrForm')[0].reset();
            $('#result').empty();
        });

        //$('#btnDownload').click(function () {

        //
        //    var imgQR = $('#imageQR').attr('src');
        //    var link = document.createElement('a');
        //    link.href = imgQR;
        //    $("#imageQR").wrap(`<a href=${link.href}>download`); // Wrap all img elements with an anchor (href="#")
        //    link.setAttribute('download', 'qrcode.jpg'); // Specify the name of the downloaded file

        //    // Ensure the link is added to the DOM
        //    document.body.appendChild(link);

        //    // Trigger the click event
        //    link.click();
        //    document.body.removeChild(link);

        //})


        $('#btnDownload').click(function (e) {


            var imgQR = $('#imageQR').attr('src');

            var xhr = new XMLHttpRequest();
            xhr.open('GET', imgQR, true);
            xhr.responseType = 'blob';

            xhr.onload = function (e) {
                if (this.status === 200) {
                    var blob = this.response;
                    var link = document.createElement('a');
                    link.href = window.URL.createObjectURL(blob);
                    link.download = 'Orderqrcode.jpg';

                    // Trigger the click event (optional)
                    // link.click();  // Uncomment if you want automatic download

                    // Alternative: Provide a visual download link (optional)


                        link.click();

                    document.body.appendChild(downloadContainer);
                } else {
                    console.error('Error downloading image:', this.statusText);
                }
            };

            xhr.onerror = function (error) {
                console.error('Error downloading image:', error);
            };

            xhr.send();
        });


        $('#btnCreateShipment').click(function () {

        });
        $('#btnCancel').click(function () {
            $(".nav button#searchTab").tab('show');
        });

        // Reset Button Action
        $('#btnReset').click(function () {
            // Clear the DataTable
            clearSearchValue();

            $('#tblDataTable').DataTable().clear().draw();
        });

        $('#tblDataTable').on('click', '.btn-delete', function () {

             rowData = $('#tblDataTable').DataTable().row($(this).closest('tr')).data();

            @*$.ajax
                ({
                    type: 'POST',
                    url: '@Url.Action("DeleteShipment", "Shipment")',
                    data: rowData,
                    dataType: "json",
                    success: function (result) {

                        if (result.Status == "S") {
                            SweetAlert('success', result.Message);
                            $('#btnSearch').click();
                        }
                        else {
                            SweetAlert('error', 'กรุณาใส่ข้อมูลให้ถูกต้อง');
                        }



                    },
                    error: function (request, status, error) {
                        SweetAlert('error', error);
                    }
                });*@
            console.log(rowData.ShipmentId);
            var dataShipId =
                  $.ajax
      ({
          type: 'DELETE',
          url: '@Url.Action("DeleteShipmentAsync", "Test")' + '/' + encodeURIComponent(rowData.ShipmentId),

          success: function (result) {

             var rowCount = dataTable.rows().count();
              if (result.status == "S") {
                  SweetAlert('success', result.message);

                  if (rowCount > 1) {
                      $('#btnSearch').click();
                  }
                  //else {
                  //    $('#btnReset').click();
                  //}


              }
              else {
                  SweetAlert('error', 'กรุณาใส่ข้อมูลให้ถูกต้อง');
              }



          },
          error: function (request, status, error) {
              SweetAlert('error', error);
          }
      });
        });

        $('#txtSearchShipDateFR').datetimepicker({
            format: 'd/m/Y',
            formatDate: 'd/m/Y',
            onShow: function (ct) {
                this.setOptions({
                    maxDate: $('#txtSearchShipDateTO').val() ? $('#txtSearchShipDateTO').val() : false
                })
            },
            timepicker: false,
        });
        $('#txtSearchShipDateTO').datetimepicker({
            format: 'd/m/Y',
            formatDate: 'd/m/Y',
            onShow: function (ct) {
                this.setOptions({
                    maxDate: $('#txtSearchShipDateFR').val() ? $('#txtSearchShipDateFR').val() : false
                })
            },
            timepicker: false,
        })

        $('#txtShipDate').datetimepicker({
            format: 'd/m/Y',
            formatDate: 'd/m/Y',
            timepicker: false,
        });

        $('#tblDataTable').on('click' ,'.btn-edit', function () {
            SaveStatus = "Update";
             rowData = $('#tblDataTable').DataTable().row($(this).closest('tr')).data();

            $(".nav button#createTab").tab('show');

            $('#txtCreateFullName').val(rowData.FullName);
            $('#txtCreateMobileNumber').val(rowData.MobileNumber);
            $('#txtShipDate').val(rowData.ShipDate);
            //$('#ddlCreateStorage').val(rowData.Storage);
            //$('#ddlCreateShipmentStatus').val(rowData.ShipmentStatus);

            getShipmentStatusAsync(''+rowData.ShipmentStatus,'#ddlCreateShipmentStatus');

            getShipmentLocationAsync(''+rowData.Storage, '#ddlCreateStorage');

        });



        function bindingTable(newShipment) {

            $('#dvTable').show();
            // Initialize DataTable
            dataTable = $('#tblDataTable').DataTable({
                destroy: true, //ล้างข้อมูลก่อนหน้า
                data: newShipment,
                searching: true,
                lengthchange: false,
                scrollx: true,
                info: false,

                columns: [

                    {
                        data: null, className: 'text-center', orderable: false,

                        render: function (data, type, row) {


                            return data.OrderNumber;
                        }
                    },
                    {
                        data: null, className: 'text-left', orderable: false,
                        render: function (data, type, row) {

                            return data.FullName;

                        }

                    },
                    {
                        data: null, className: 'text-center', orderable: false,

                        render: function (data, type, row) {

                            return data.MobileNumber;

                        }

                    },
                    {
                        data: null, className: 'text-center', orderable: false,

                        render: function (data, type, row) {
                           
                            return data.Storage;

                        }

                    },
                    {
                        data: null, className: 'text-center', orderable: false,

                        render: function (data, type, row) {

                            return data.ShipmentStatus;

                        }

                    }
                    , {
                        data: null, className: 'text-center', orderable: false,

                        render: function (data, type, row) {

                            return data.ShipDate;

                        }

                    },
                    {
                        className: 'text-center',
                        orderable: false,
                        data: null,
                        defaultContent: '<i class="fa-solid fa-trash btn-delete"></i>',

                    },
                    //{
                    //    data: 'CreateDate', classNmae: 'text-left', orderable: false,
                    //    render: function (data, type, row) {

                    //      /*  return data.CreateDate;*/
                    //        return data;
                    //    }
                    //}

                ]


            });

        }

        function clearSearchValue() {
            $('#frmSearchShipment')[0].reset();
            $('#tblDataTable').dataTable().empty();
            $('#ddlSearchShipmentStatus').val('').trigger('change');
            $('#ddlSearchStorage').val('').trigger('change');



        }

        function clearCreateValue() {
            $('#frmCreateShipment')[0].reset();
        }

        function bindingTableAll(newShipment) {

            $('#dvTable').show();
            // Initialize DataTable
            dataTable = $('#tblDataTable').DataTable({

                destroy: true, //ล้างข้อมูลก่อนหน้า
                data: newShipment,
                searching: true,
                lengthchange: false,
                scrollx: true,
                info: false,

                columns: [

                    {
                        className: 'text-center',
                        orderable: false,
                        data: null,
                        defaultContent: '<i class="fa-solid fa-edit btn-edit"></i>',

                    },

                    {
                        data: null, className: 'text-center', orderable: false,

                        render: function (data, type, row) {


                            return data.OrderNumber;
                        }
                    },
                    {
                        data: null, className: 'text-left', orderable: false,
                        render: function (data, type, row) {

                            return data.FullName;

                        }

                    },
                    {
                        data: null, className: 'text-center', orderable: false,

                        render: function (data, type, row) {

                            return data.MobileNumber;

                        }

                    },
                    {
                        data: null, className: 'text-center', orderable: false,

                        render: function (data, type, row) {
                            //if (data.ShipmentLocation[0].ShipmentItemText == "Bangsue") {
                            //    debugger
                            //    return '<span style="color:blue">' + data.ShipmentLocation[0].ShipmentItemText + '</span>'
                            //}
                            //else {
                            //    return data.ShipmentLocation[0].ShipmentItemText
                            //}

                            switch (data.ShipmentLocation[0].ShipmentItemText) {

                                case "Saraburi":
                                    return '<div id='+"dvCheckMove"+ data.OrderNumber+' > <span style="color:brown">' + data.ShipmentLocation[0].ShipmentItemText +'	&nbsp; <i class="fa-solid fa-edit btn-edit-storage"></i>'+ '</span></div > ';
                                    break

                                case "Bangsue":
                                    return '<span style="color:blue">' + data.ShipmentLocation[0].ShipmentItemText + '	&nbsp; <i class="fa-solid fa-edit  btn-edit-storage"></i>' + '</span>';
                                    break

                                case "Wangnoi":
                                    return '<span style="color:red">' + data.ShipmentLocation[0].ShipmentItemText + '	&nbsp; <i class="fa-solid fa-edit btn-edit-storage"></i>' + '</span>';
                                    break

                                case "Rangsit":
                                    return '<span style="color:Orange">' + data.ShipmentLocation[0].ShipmentItemText + '	&nbsp; <i class="fa-solid fa-edit btn-edit-storage"></i>' +  '</span>';
                                    break



                                default:
                                    return data.ShipmentLocation[0].ShipmentItemText;


                            }


                        }

                    },
                    {
                        data: null, className: 'text-center', orderable: false,

                        render: function (data, type, row) {

                            return data.ShipmentStatusList[0].ShipmentItemText

                        }

                    }
                    , {
                        data: null, className: 'text-center', orderable: false,

                        render: function (data, type, row) {

                            return data.ShipDate;

                        }

                    },
                    {
                        className: 'text-center',
                        orderable: false,
                        data: null,
                        defaultContent: '<i class="fa-solid fa-trash btn-delete"></i>',

                    },
                    //{
                    //    data: 'CreateDate', classNmae: 'text-left', orderable: false,
                    //    render: function (data, type, row) {

                    //      /*  return data.CreateDate;*/
                    //        return data;
                    //    }
                    //}

                ]


            });
            //rowCount = dataTable.rows().count();
        }
    </script>
}
