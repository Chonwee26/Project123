
@{
    Layout = "~/Views/Shared/_PostLayout.cshtml";
}

@section Styles{
    <style type="text/css">
        body {
            background-color: #f9fbfd;
        }

        container {
            background-color: black;
        }

        .card {
            background-color: white;
        }

        .carousel-item img {
            height: 500px; /* Adjust the height as needed */
            object-fit: cover; /* Ensure the image covers the fixed height */
        }

        #carouselExampleCaptions {
            margin: 0; /* Reset margin for the carousel container */
        }

        #chatbot {
            position: fixed;
            bottom: 0;
            right: 20px;
            width: 300px;
            border: 1px solid #ccc;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            background-color: white;
        }

        #chatbotHeader {
            background-color: #007bff;
            color: white;
            padding: 10px;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        #chatbotBody {
            display: none;
            padding: 10px;
        }

        #messages {
            height: 250px;
          
            overflow-y: auto;
            border: 1px solid #ccc;
            padding: 10px;
            margin-bottom: 10px;
            word-wrap: break-word;
        }

        #userInput {
            width: calc(100% - 70px);
            padding: 5px;
            outline: none;
            margin-right:10px;
        }

        #btnSend {
            padding: 5px 10px;
            outline: none;
        }

        .bubble-message {
            border-radius: 10px;
            color: white;
            padding-left: 10px;
            padding-right: 10px;
            padding-top: 5px;
            padding-bottom: 5px;
            max-width: 80%; /* Ensures the bubbles don't exceed a certain width */
            word-wrap: break-word; /* Ensures long text wraps */
        }

        .bot-bubble-message {
            background-color: grey;
        }

        .user-bubble-message {
            background-color: #007bff;
        }
    </style>
}

<div class="container">
    <div class="row">
        <div id="carouselExampleCaptions" class="carousel slide" data-bs-ride="carousel">
            <div class="carousel-indicators">
                <button type="button" data-bs-target="#carouselExampleCaptions" data-bs-slide-to="0" class="active" aria-current="true" aria-label="Slide 1" hidden></button>
                <button type="button" data-bs-target="#carouselExampleCaptions" data-bs-slide-to="1" aria-label="Slide 2" hidden></button>
                <button type="button" data-bs-target="#carouselExampleCaptions" data-bs-slide-to="2" aria-label="Slide 3" hidden></button>
            </div>
            <div class="carousel-inner d-flex" style="border-radius:15px;">
                <div class="carousel-item active">
                    <img src="~/picture/thailand.jpg" class="d-block w-100" alt="">
                    @*<div class="carousel-caption d-none d-md-block">
                            <h5>First slide label</h5>
                            <p>Some representative placeholder content for the first slide.</p>
                        </div>*@
                </div>
                <div class="carousel-item">
                    <img src="~/picture/Japan-2107x1406.jpg" class="d-block w-100" alt="...">

                </div>
                <div class="carousel-item">
                    <img src="~/picture/iceland.jpg" class="d-block w-100" alt="...">

                </div>
            </div>
            <button class="carousel-control-prev" type="button" data-bs-target="#carouselExampleCaptions" data-bs-slide="prev">
                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                <span class="visually-hidden">Previous</span>
            </button>
            <button class="carousel-control-next" type="button" data-bs-target="#carouselExampleCaptions" data-bs-slide="next">
                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                <span class="visually-hidden">Next</span>
            </button>
        </div>
    </div>
    <form id="frmSearchShipment">
        <div class="col-9 offset-3 mt-3">
            <h1 class="">เช็คเลขพัสดุ Chowii Express</h1>
            <div class="col-12">
                <div class="row">

                    <div class="col-8">
                        <input type="text" id="txtOrderNumber" class="form-control" name="OrderNumber" placeholder="ใส่หมายเลขพัสดุ" />
                    </div>

                    <div class="col-3">
                        <button type="submit" class="btn btn-primary px-4" id="btnSearch">Tracking</button>
                    </div>

                </div>
            </div>
        </div>
    </form>
</div>

<div class="container mt-5" id="containerSection">
    <div class="card"">
        <div  id="cardAccordion">

            </div>
            <div class="card-body">


                <div id="shipmentInfo" class="mt-3"></div>
            </div>
        </div>
    </div>

<div id="chatbot">
    <div id="chatbotHeader">
        <span>Live Chat</span>
    </div>

    <div id="chatbotBody">
        <div id="messages"></div>
        <div class="d-flex col-12">
            <input type="text" class="form-control" id="userInput" placeholder="Type a message...">
            <button class="btn btn-outline-primary" id="btnSend">Send</button>
        </div>
    </div>
    </div>

@section Scripts{
    <script type="text/javascript">
        $(document).ready(function () {
            $("#containerSection").hide();
        });
        $('#liveChat').click(function () {
            var liveChat = $('#liveChat');
            liveChat.toggle();
        });
        $('#frmSearchShipment').validate({
            rules: {

            },
            messages: {

            },
            errorPlacement: function (error, element) {

            },
            submitHandler: function (form) {
                var inputDate = $('#txtSearchShipDateFR').val();
                var formattedDate = "";

                // Check if inputDate is a valid date in the format DD/MM/YYYY
                if (moment(inputDate, 'DD/MM/YYYY', true).isValid()) {
                    // If valid, format the date as YYYY-MM-DD
                    formattedDate = moment(inputDate, 'DD/MM/YYYY').format('YYYY-MM-DD');
                    inputDate = formattedDate;
                }
                var frmSearch = $('#frmSearchShipment').serialize();

                var frmSearch1 = {
                    OrderNumber: $('#txtOrderNumber').val()
                }

                @*$.ajax
                    ({
                        type: 'POST',
                        url: '@Url.Action("SearchShipmentAll", "Shipment")',
                        data: frmSearch1,
                        dataType: "json",
                        success: function (result) {

                            if (result.Message == "S") {
                                 
                                displayShipmentInfo(result.Data);
                            }

                            else {
                                SweetAlert('error', 'กรุณาใส่ข้อมูลให้ถูกต้อง');
                            }
                        },
                        error: function (request, status, error) {
                            SweetAlert('error', error);
                        }
                    });
                }*@
                  var token = localStorage.getItem('access_token');

                $.ajax
                    ({
                        type: 'POST',
                        url: '@Url.Action("SearchShipmentAsync", "Test")',
                        data: frmSearch1,
                        dataType: "json",
                        headers: {
                            'Authorization': 'Bearer ' + token
                        },
                        success: function (result) {
                             debugger
                            if (result.status == "S") {
                                 
                                if (result.Data.length > 0) {
                                    $("#containerSection").show();
                                    displayShipmentInfo(result.Data);
                                }
                                else {
                                    SweetAlert('error', 'กรุณาใส่ข้อมูลให้ถูกต้อง');
                                }
                            }

                            else {
                                SweetAlert('error', 'กรุณาใส่ข้อมูลให้ถูกต้อง');
                            }
                        },
                        error: function (request, status, error) {
                            SweetAlert('error', error);
                        }
                    });
                }
        });

        function displayShipmentInfo(shipmentInfo) {
             
            var Data = shipmentInfo.find(f => f.OrderNumber == shipmentInfo[0].OrderNumber);
            var picture;
            var choosePicture;
            choosePicture = Data.ShipmentStatusList[0].ShipmentItemID
            if (choosePicture == "1") {
                picture = "/picture/box.png"
            }
            else if (choosePicture == "2") {
                picture =
                   "/picture/truckani.gif"
            }

            else if (choosePicture == "3") {
                picture =
                    "/picture/warehouse.png"
            }

            else if (choosePicture == "4") {
                picture =
                   "/picture/scooterani.gif"
            }
            else if (choosePicture == "5") {
                picture =
                "/picture/5988246.png"
            }
            var accordion = `
            <div class="accordion accordion-flush" id="accordionExample">
    <div class="accordion-item">
        <h2 class="accordion-header">
            <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapseOne" aria-expanded="true" aria-controls="collapseOne">
                <!-- Button Content -->
            </button>
        </h2>
        <div id="collapseOne" class="accordion-collapse collapse show" data-bs-parent="#accordionExample">
            <div class="accordion-body">
                <div>
                    <div class="d-flex justify-content-around">
                        <img src= ${picture} style="height:200px;width:200px;" class="m-3" />
                    </div>
                    <h3 class="text-center">${Data.ShipmentStatusList[0].ShipmentItemText}</h3>                   
                </div>
            </div>        
        </div>
    </div>
</div>

`;
            $('#cardAccordion').html(accordion);

            var html =`<hr>
  <h6>Shipment ID: ${Data.ShipmentId}</h6>
  <p>Order Number: ${Data.OrderNumber}</p>
  <p>Full Name: ${Data.FullName}</p>
  <p>Mobile Number: ${Data.MobileNumber}</p>
  <p>Storage: ${Data.ShipmentLocation[0].ShipmentItemText}</p>
  <p>Shipment Status: ${Data.ShipmentStatusList[0].ShipmentItemText}</p>
  <p>Ship Date: ${Data.ShipDate}</p>
  <p>Create Date: ${Data.CreateDate}</p>
`;
                $('#shipmentInfo').html(html);
        }

        $('#chatbotHeader').click(function () {
            $('#chatbotBody').toggle();

        });

        $('#btnSend').click(function () {
            sendMessage()
        });
        $('#userInput').keypress(function (e) {
            if (e.which == 13) { // Enter key pressed
                sendMessage();
            }
        });    

        function sendMessage() {
            var userInput = $('#userInput').val();
            if (userInput.trim() !== '') {
                var userMessage = `<div class=" d-flex justify-content-end mt-3" id="userBubble">
         <div class= "bubble-message user-bubble-message"id="userMessage">${userInput}</div ></div >`

                $('#messages').append(userMessage);
                $('#userInput').val('');
                botResponse(userInput);             
            }
        }

        function botResponse(userInput) {
             
            userInput = userInput.toLowerCase();
            var botchatResponse
            setTimeout(function () {

                if (userInput.includes("hello")) {
                    botchatResponse = getBotResponse("hello I am bot Chowii")
                }
                else if (userInput.includes("help")) {
                    botchatResponse = getBotResponse("What do you want me to help?") + `<div class=" mt-2 form-check">
  <input class="form-check-input" type="checkbox" value="" id="flexCheckDefault">
  <label class="form-check-label" for="flexCheckDefault">
    User
  </label>
</div>
<div class="form-check">
  <input class="form-check-input" type="checkbox" value="" id="flexCheckChecked" >
  <label class="form-check-label" for="flexCheckChecked">
   Tracking Order
  </label>
</div>`
                }
                else {
                    botchatResponse = getBotResponse("I don't understand bro")
                }
                $('#messages').append(botchatResponse);              
            }, 1000);

        }
        function getBotResponse(botMessage) {
             
            botMessage = botMessage == null || botMessage == undefined ? "" : botMessage;
            var botContainer = `<div class=" d-flex justify-content-start mt-3" id="userBubble"><div class= "bubble-message bot-bubble-message"id="botMessage">${botMessage}</div ></div >`
            return botContainer
        }
    </script>
}


